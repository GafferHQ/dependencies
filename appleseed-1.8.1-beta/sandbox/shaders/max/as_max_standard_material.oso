OpenShadingLanguage 1.00
# Compiled by oslc 1.8.9
# options: -O2 -DNDEBUG -IM:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/include -o M:/gafferDependencies/appleseed-1.8.1-beta/sandbox/shaders/max/as_max_standard_material.oso
shader as_max_standard_material	%meta{string,as_maya_node_name,"asStandardSurface"} %meta{string,as_maya_classification,"drawdb/shader/surface:rendernode/appleseed/surface:shader/surface:swatch/AppleseedRenderSwatch"} %meta{string,help,"Standard Surface Shader"} %meta{int,as_maya_type_id,1210836} 
param	float	in_diffuse_weight	1		%meta{string,as_maya_attribute_name,"diffuseWeight"} %meta{string,as_maya_attribute_short_name,"diw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Weight"} %meta{string,page,"Diffuse"}  %read{215,647} %write{2147483647,-1}
param	color	in_color	0.5 0.5 0.5		%meta{string,as_maya_attribute_name,"color"} %meta{string,as_maya_attribute_short_name,"c"} %meta{string,label,"Diffuse Color"} %meta{string,page,"Diffuse"}  %read{219,647} %write{2147483647,-1}
param	float	in_diffuse_roughness	0.1		%meta{string,as_maya_attribute_name,"diffuseRoughness"} %meta{string,as_maya_attribute_short_name,"dir"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Diffuse Roughness"} %meta{string,page,"Diffuse"}  %read{656,656} %write{2147483647,-1}
param	float	in_subsurface_weight	0		%meta{string,as_maya_attribute_name,"subsurfaceWeight"} %meta{string,as_maya_attribute_short_name,"ssw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface Weight"} %meta{string,page,"Subsurface"} %meta{int,divider,1}  %read{245,645} %write{2147483647,-1}
param	color	in_sss_mfp	0 0 0		%meta{string,as_maya_attribute_name,"subsurfaceMfp"} %meta{string,as_maya_attribute_short_name,"mfp"} %meta{string,label,"Mean Free Path"} %meta{string,page,"Subsurface"}  %read{251,643} %write{2147483647,-1}
param	float	in_sss_mfp_scale	1		%meta{string,as_maya_attribute_name,"subsurfaceMfpScale"} %meta{string,as_maya_attribute_short_name,"sfm"} %meta{float,min,0} %meta{float,max,1000} %meta{float,softmax,100} %meta{string,label,"MFP Scale"} %meta{string,page,"Subsurface"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{643,643} %write{2147483647,-1}
param	int	in_sss_maximum_ray_depth	2		%meta{string,as_maya_attribute_name,"sssMaximumRayDepth"} %meta{string,as_maya_attribute_short_name,"ssd"} %meta{int,min,1} %meta{int,max,16} %meta{int,softmax,8} %meta{string,label,"SSS Ray Depth"} %meta{string,page,"Subsurface.Advanced"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{230,230} %write{2147483647,-1}
param	float	in_sss_threshold	0.001		%meta{string,as_maya_attribute_name,"sssThreshold"} %meta{string,as_maya_attibute_short_name,"sth"} %meta{float,min,0} %meta{float,max,1} %meta{float,softmax,0.0099999998} %meta{string,label,"SSS Diffuse Threshold"} %meta{string,page,"Subsurface.Advanced"} %meta{string,help,"Threshold at which SSS is replaced by a diffuse term"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{256,256} %write{2147483647,-1}
param	float	in_translucency_weight	0		%meta{string,as_maya_attribute_name,"translucencyWeight"} %meta{string,as_maya_attribute_short_name,"trw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Translucency Weight"} %meta{string,page,"Translucency"}  %read{144,661} %write{2147483647,-1}
param	color	in_translucency_color	0 0 0		%meta{string,as_maya_attribute_name,"translucencyColor"} %meta{string,as_maya_attribute_short_name,"trc"} %meta{string,label,"Translucency Color"} %meta{string,page,"Translucency"}  %read{148,661} %write{2147483647,-1}
param	color	in_specular_color	1 1 1		%meta{string,as_maya_attribute_name,"specularColor"} %meta{string,as_maya_attribute_short_name,"spc"} %meta{string,label,"Specular Color"} %meta{string,page,"Specular"}  %read{177,422} %write{2147483647,-1}
param	float	in_specular_roughness	0.1		%meta{string,as_maya_attribute_name,"specularRoughness"} %meta{string,as_maya_attribute_short_name,"sro"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Roughness"} %meta{string,page,"Specular"}  %read{374,400} %write{2147483647,-1}
param	float	in_specular_spread	0.25		%meta{string,as_maya_attribute_name,"specularSpread"} %meta{string,as_maya_attribute_short_name,"sps"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Spread"} %meta{string,page,"Specular"} %meta{string,help,"Specular spread, controls the tails of the highlights."} %meta{int,divider,1}  %read{373,399} %write{2147483647,-1}
param	int	in_fresnel_type	0		%meta{string,as_maya_attribute_name,"fresnelType"} %meta{string,as_maya_attribute_short_name,"fty"} %meta{string,widget,"mapper"} %meta{string,options,"Dielectric:0|Conductor:1"} %meta{string,label,"Fresnel Type"} %meta{string,page,"Specular"} %meta{string,help,"In dielectric mode, set IOR explicitly, and in conductor mode, set face and edge refletance."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{352,432} %write{2147483647,-1}
param	float	in_ior	1.37		%meta{string,as_maya_attribute_name,"ior"} %meta{string,as_maya_attribute_short_name,"sio"} %meta{float,min,1} %meta{float,max,10} %meta{float,softmax,2} %meta{string,label,"Index Of Refraction"} %meta{string,page,"Specular"} %meta{string,help,"IOR, only active if Fresnel is set to dielectric."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{187,644} %write{2147483647,-1}
param	color	in_face_tint	0.85000002 0.20999999 0.050000001		%meta{string,as_maya_attribute_name,"faceTint"} %meta{string,as_maya_attribute_short_name,"f0"} %meta{string,label,"Facing Tint"} %meta{string,page,"Specular"} %meta{string,help,"Reflectance at facing angle, for conductor Fresnel."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{191,517} %write{2147483647,-1}
param	color	in_edge_tint	1 1 1		%meta{string,as_maya_attribute_name,"edgeTint"} %meta{string,as_maya_attribute_short_name,"f90"} %meta{string,label,"Edge Tint"} %meta{string,page,"Specular"} %meta{string,help,"Reflectance at grazing angle, conductor Fresnel only."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,divider,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{200,477} %write{2147483647,-1}
param	float	in_anisotropy_amount	0		%meta{string,as_maya_attribute_name,"anisotropyAmount"} %meta{string,as_maya_attribute_short_name,"anw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Anisotropy Amount"} %meta{string,page,"Specular.Anisotropy"}  %read{281,400} %write{2147483647,-1}
param	float	in_anisotropy_angle	0		%meta{string,as_maya_attribute_name,"anisotropyAngle"} %meta{string,as_maya_attribute_short_name,"ana"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Anisotropy Angle"} %meta{string,page,"Specular.Anisotropy"} %meta{string,help,"Anisotropy angle in [0,1], mapping to [0,360] degrees"}  %read{297,299} %write{2147483647,-1}
param	color	in_anisotropy_map	0 0 0		%meta{string,as_maya_attribute_name,"anisotropyMap"} %meta{string,as_maya_attribute_short_name,"ama"} %meta{string,label,"Anisotropy Vector Map"} %meta{string,page,"Specular.Anisotropy"} %meta{string,help,"Anisotropy vector map, with XY encoded in RG channels"}  %read{283,285} %write{2147483647,-1}
param	float	in_refraction_amount	0		%meta{string,as_maya_attribute_name,"refractionAmount"} %meta{string,as_maya_attribute_short_name,"rtw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Refraction Amount"} %meta{string,page,"Specular.Refraction"} %meta{string,help,"Refraction amount. Refraction inherits the IOR"}  %read{159,354} %write{2147483647,-1}
param	color	in_refraction_tint	1 1 1		%meta{string,as_maya_attribute_name,"refractionTint"} %meta{string,as_maya_attribute_short_name,"rti"} %meta{string,label,"Refraction Tint"} %meta{string,page,"Specular.Refraction"} %meta{int,divider,1}  %read{163,354} %write{2147483647,-1}
param	float	in_absorption_depth	0		%meta{string,as_maya_attribute_name,"absorptionDepth"} %meta{string,as_maya_attribute_short_name,"rad"} %meta{float,min,0} %meta{float,max,10000} %meta{float,softmax,100} %meta{string,label,"Absorption Depth"} %meta{string,page,"Specular.Refraction"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{374,374} %write{2147483647,-1}
param	color	in_absorption_color	1 1 1		%meta{string,as_maya_attribute_name,"absorptionColor"} %meta{string,as_maya_attribute_short_name,"rac"} %meta{string,label,"Absorption Color"} %meta{string,page,"Specular.Refraction"}  %read{374,374} %write{2147483647,-1}
param	float	in_coating_reflectivity	0		%meta{string,as_maya_attribute_name,"coatingReflectivity"} %meta{string,as_maya_attribute_short_name,"cow"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coating Reflectivity"} %meta{string,page,"Coating"} %meta{string,help,"Coating specular amount."}  %read{43,75} %write{2147483647,-1}
param	float	in_coating_roughness	0		%meta{string,as_maya_attribute_name,"coatingRoughness"} %meta{string,as_maya_attribute_short_name,"cor"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coating Roughness"} %meta{string,page,"Coating"}  %read{65,73} %write{2147483647,-1}
param	float	in_coating_ior	1.42		%meta{string,as_maya_attribute_name,"coatingIor"} %meta{string,as_maya_attribute_short_name,"coi"} %meta{float,min,1} %meta{float,max,5} %meta{float,softmax,2} %meta{string,label,"Coating IOR"} %meta{string,page,"Coating"} %meta{string,help,"Coating (monochromatic) dielectric IOR"} %meta{int,divider,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{61,450} %write{2147483647,-1}
param	float	in_coating_depth	0		%meta{string,as_maya_attribute_name,"coatingDepth"} %meta{string,as_maya_attribute_short_name,"cod"} %meta{float,min,0} %meta{float,max,10} %meta{float,softmax,1} %meta{string,label,"Coating Depth"} %meta{string,page,"Coating"} %meta{string,help,"Maps from [0,1] to [0,10] microns."}  %read{46,358} %write{2147483647,-1}
param	color	in_coating_absorption	1 1 1		%meta{string,as_maya_attribute_name,"coatingAbsorption"} %meta{string,as_maya_attribute_short_name,"coa"} %meta{string,label,"Coating Absorption"} %meta{string,page,"Coating"}  %read{103,112} %write{2147483647,-1}
param	float	in_incandescence_amount	0		%meta{string,as_maya_attribute_name,"incandescenceAmount"} %meta{string,as_maya_attribute_short_name,"inw"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Incandescence Amount"} %meta{string,page,"Incandescence"}  %read{601,604} %write{2147483647,-1}
param	int	in_incandescence_type	0		%meta{string,as_maya_attribute_name,"incandescenceType"} %meta{string,as_maya_attribute_short_name,"int"} %meta{string,widget,"mapper"} %meta{string,options,"Constant:0|Physically Based:1"} %meta{string,label,"Incandescence Type"} %meta{string,page,"Incandescence"} %meta{string,help,"Constant based, or blackbody radiator based EDF"} %meta{int,divider,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{599,599} %write{2147483647,-1}
param	color	in_incandescence_color	0 0 0		%meta{string,as_maya_attribute_name,"incandescenceColor"} %meta{string,as_maya_attribute_short_name,"inc"} %meta{string,label,"Incandescence Color"} %meta{string,page,"Incandescence"} %meta{string,help,"Incandescence color, only valid in constant mode."}  %read{266,601} %write{2147483647,-1}
param	int	in_temperature	4300		%meta{string,as_maya_attribute_name,"temperature"} %meta{string,as_maya_attribute_short_name,"tem"} %meta{int,min,1000} %meta{int,max,11000} %meta{int,softmin,3400} %meta{int,softmax,9300} %meta{string,label,"Temperature"} %meta{string,page,"Incandescence"} %meta{string,help,"Temperature in Kelvin degrees, only valid in physically based mode"} %meta{int,divider,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{262,602} %write{2147483647,-1}
param	int	in_area_normalize_edf	0		%meta{string,as_maya_attribute_name,"normalizeAreaEDF"} %meta{string,as_maya_attribute_short_name,"nae"} %meta{string,widget,"checkBox"} %meta{string,label,"Normalize Area"} %meta{string,page,"Incandescence"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{618,618} %write{2147483647,-1}
param	int	in_tonemap_edf	1		%meta{string,as_maya_attribute_name,"toneMapEDF"} %meta{string,as_maya_attribute_short_name,"tme"} %meta{string,widget,"checkBox"} %meta{string,label,"Tonemap Color"} %meta{string,page,"Incandescence"} %meta{string,help,"Tonemap incandescence, only valid for physically based mode"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{605,605} %write{2147483647,-1}
param	color	in_transparency	0 0 0		%meta{string,as_maya_attribute_name,"transparency"} %meta{string,as_maya_attribute_short_name,"it"} %meta{string,label,"Transparency Color"} %meta{string,page,"Transparency"}  %read{3,42} %write{2147483647,-1}
param	normal	in_bump_normal_coating	0 0 0		%meta{string,as_maya_attribute_name,"coatingNormal"} %meta{string,as_maya_attribute_short_name,"ncn"} %meta{string,label,"Coating Normal"} %meta{string,page,"Bump"} %meta{string,help,"The coating normal. If not set, the substrate normal is used for both layers."}  %read{55,57} %write{0,0} %initexpr
param	normal	in_bump_normal_substrate	0 0 0		%meta{string,as_maya_attribute_name,"normalCamera"} %meta{string,as_maya_attribute_short_name,"n"} %meta{string,label,"Substrate Normal"} %meta{string,page,"Bump"} %meta{string,help,"The default bump normal."}  %read{58,278} %write{1,1} %initexpr
param	int	in_enable_matte	0		%meta{string,as_maya_attribute_name,"enableMatte"} %meta{string,as_maya_attribute_short_name,"ema"} %meta{string,widget,"checkBox"} %meta{string,label,"Enable Matte Opacity"} %meta{string,page,"Matte Opacity"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,divider,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{34,34} %write{2147483647,-1}
param	float	in_matte_opacity	0		%meta{string,as_maya_attribute_name,"matteOpacity"} %meta{string,as_maya_attribute_short_name,"mao"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Matte Opacity"} %meta{string,page,"Matte Opacity"} %meta{int,gafferNoduleLayoutVisible,0}  %read{36,36} %write{2147483647,-1}
param	color	in_matte_opacity_color	1 0.5 0		%meta{string,as_maya_attribute_name,"matteOpacityColor"} %meta{string,as_maya_attribute_short_name,"mac"} %meta{string,label,"Matte Opacity Color"} %meta{string,page,"Matte Opacity"} %meta{int,gafferNoduleLayoutVisible,0}  %read{36,36} %write{2147483647,-1}
param	int	in_maximum_ray_depth	8		%meta{string,as_maya_attribute_name,"maximumRayDepth"} %meta{string,as_maya_attribute_short_name,"mrd"} %meta{int,min,0} %meta{int,max,32} %meta{int,softmax,8} %meta{string,label,"Ray Depth"} %meta{string,page,"Advanced"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{29,29} %write{2147483647,-1}
param	vector	Tn	0 0 0		%meta{int,lockgeom,0} %meta{int,as_maya_attribute_hidden,1} %meta{string,widget,"null"} %meta{int,gafferNoduleLayoutVisible,0}  %read{280,289} %write{2147483647,-1}
param	vector	Bn	0 0 0		%meta{int,lockgeom,0} %meta{int,as_maya_attribute_hidden,1} %meta{string,widget,"null"} %meta{int,gafferNoduleLayoutVisible,0}  %read{291,291} %write{2147483647,-1}
oparam	closure color	ClosureOut			%meta{string,as_maya_attribute_name,"outColor"} %meta{string,as_maya_attribute_short_name,"oc"} %meta{string,widget,"null"}  %read{15,675} %write{15,674}
oparam	closure color	out_outTransparency			%meta{string,as_maya_attribute_name,"outTransparency"} %meta{string,as_maya_attribute_short_name,"ot"} %meta{string,widget,"null"}  %read{15,15} %write{14,14}
oparam	closure color	out_outMatteOpacity			%meta{string,as_maya_attribute_name,"outMatteOpacity"} %meta{string,as_maya_attribute_short_name,"om"} %meta{string,widget,"null"} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{38,38} %write{37,37}
global	vector	I	%read{54,429} %write{2147483647,-1}
global	normal	N	%read{0,1} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{675,675}
local	vector	___254_axis	%read{306,308} %write{303,303}
local	float	___254_cosang	%read{305,346} %write{304,304}
local	float	___254_sinang	%read{316,341} %write{304,304}
local	float	___254_cosang1	%read{315,340} %write{305,305}
local	float	___254_x	%read{309,341} %write{306,306}
local	float	___254_y	%read{314,339} %write{307,307}
local	float	___254_z	%read{316,344} %write{308,308}
local	matrix	___254_M	%read{350,350} %write{348,348}
local	float	___331_anisotropy	%read{71,73} %write{68,69}
local	float	___364_eta_min	%read{464,486} %write{459,481}
local	float	___364_sqrt_f0	%read{461,484} %write{460,482}
local	float	___364_eta_max	%read{464,486} %write{463,485}
local	float	___365_nr	%read{501,529} %write{499,527}
local	float	___372_eta	%read{534,576} %write{534,576}
local	float	___372_etak	%read{534,576} %write{534,576}
local	float	___372_costheta_i2	%read{534,576} %write{534,576}
local	float	___372_sintheta_i2	%read{534,576} %write{534,576}
local	float	___372_eta2	%read{534,576} %write{534,576}
local	float	___372_etak2	%read{534,576} %write{534,576}
local	float	___372_t0	%read{534,576} %write{534,576}
local	float	___372_a2b2sum	%read{534,576} %write{534,576}
local	float	___372_t1	%read{534,576} %write{534,576}
local	float	___372_sqrt_a	%read{534,576} %write{534,576}
local	float	___372_t2	%read{534,576} %write{534,576}
local	float	___372_Rs	%read{534,576} %write{534,576}
local	float	___372_t3	%read{534,576} %write{534,576}
local	float	___372_t4	%read{534,576} %write{534,576}
local	float	___372_Rp	%read{534,576} %write{534,576}
local	int	compute_transparency	%read{12,233} %write{10,11}
local	int	ray_depth	%read{29,230} %write{24,25}
local	int	status	%read{26,26} %write{25,25}
local	color	opacity	%read{75,671} %write{42,42}
local	int	compute_coating	%read{53,449} %write{50,51}
local	color	coating_transmittance	%read{94,583} %write{52,134}
local	vector	___378_In	%read{59,59} %write{54,54}
local	normal	___378_Nn	%read{60,73} %write{57,58}
local	float	___378_costheta_o	%read{84,118} %write{60,60}
local	float	___379_R0	%read{83,87} %write{82,82}
local	float	___379_Kr	%read{89,89} %write{87,87}
local	color	___380_absorption_coeff	%read{124,127} %write{112,125}
local	float	___380_max_depth	%read{120,120} %write{117,117}
local	float	___380_tau	%read{126,126} %write{120,120}
local	color	___380_fake_absorption	%read{132,132} %write{128,128}
local	int	compute_translucency	%read{237,415} %write{157,158}
local	int	compute_transmission	%read{174,241} %write{172,173}
local	int	compute_specular	%read{279,279} %write{213,214}
local	int	compute_diffuse	%read{405,405} %write{228,229}
local	int	compute_bssrdf	%read{407,627} %write{260,261}
local	int	compute_edf	%read{411,596} %write{275,276}
local	color	substrate_transmittance	%read{583,583} %write{277,582}
local	normal	Nn	%read{294,670} %write{278,278}
local	vector	___382_tangent	%read{349,400} %write{280,351}
local	vector	___384_vector_map	%read{288,293} %write{287,287}
local	color	___386_refraction_color	%read{364,374} %write{354,354}
local	float	___390_costheta_o	%read{440,576} %write{431,431}
local	float	___391_R0	%read{439,443} %write{438,438}
local	float	___391_Kr	%read{445,445} %write{443,443}
local	float	___392_exterior_n	%read{534,576} %write{450,451}
local	color	___392_Kr	%read{580,580} %write{452,576}
local	color	___392_n	%read{490,576} %write{487,487}
local	color	___392_k	%read{534,576} %write{531,531}
local	int	___393_i	%read{534,576} %write{533,576}
local	color	transmittance	%read{585,671} %write{583,583}
local	color	___396_edf_color	%read{606,625} %write{601,609}
local	float	___400_normalization	%read{623,623} %write{620,621}
local	color	___401_albedo	%read{630,640} %write{628,641}
local	color	___403_diffuse_color	%read{649,658} %write{647,647}
local	color	___403_translucency_color	%read{663,672} %write{661,661}
temp	float	$tmp1	%read{8,8} %write{7,7}
const	string	$const1	"max"		%read{2,662} %write{2147483647,-1}
const	int	$const2	0		%read{3,663} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{3,3}
temp	float	$tmp3	%read{7,7} %write{6,6}
const	int	$const3	1		%read{4,664} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{4,4}
const	int	$const4	2		%read{5,665} %write{2147483647,-1}
temp	float	$tmp5	%read{6,6} %write{5,5}
const	float	$const5	0		%read{8,668} %write{2147483647,-1}
temp	int	$tmp6	%read{9,9} %write{8,8}
temp	closure color	$tmp7	%read{14,14} %write{13,13}
const	string	$const6	"transparent"		%read{13,13} %write{2147483647,-1}
temp	int	$tmp8	%read{17,17} %write{16,16}
const	string	$const7	"shadow"		%read{16,16} %write{2147483647,-1}
temp	int	$tmp9	%read{18,22} %write{17,21}
temp	int	$tmp10	%read{20,20} %write{19,19}
const	string	$const8	"transparency"		%read{19,19} %write{2147483647,-1}
temp	int	$tmp11	%read{21,21} %write{20,20}
const	string	$const9	"path:ray_depth"		%read{25,25} %write{2147483647,-1}
temp	int	$tmp12	%read{27,27} %write{26,26}
temp	int	$tmp13	%read{28,32} %write{27,31}
temp	int	$tmp14	%read{30,30} %write{29,29}
temp	int	$tmp15	%read{31,31} %write{30,30}
temp	closure color	$tmp16	%read{37,37} %write{35,35}
const	string	$const10	"holdout"		%read{35,35} %write{2147483647,-1}
temp	color	$tmp17	%read{37,37} %write{36,36}
const	float	$const11	1		%read{39,621} %write{2147483647,-1}
temp	int	$tmp18	%read{40,40} %write{39,39}
temp	int	$tmp19	%read{44,44} %write{43,43}
temp	int	$tmp20	%read{45,49} %write{44,48}
temp	int	$tmp21	%read{47,47} %write{46,46}
temp	int	$tmp22	%read{48,48} %write{47,47}
const	color	$const12	1 1 1		%read{52,277} %write{2147483647,-1}
temp	int	$tmp23	%read{56,56} %write{55,55}
temp	vector	$tmp24	%read{60,60} %write{59,59}
temp	int	$tmp25	%read{62,62} %write{61,61}
temp	closure color	$tmp26	%read{76,76} %write{71,73}
const	string	$const13	"beckmann"		%read{71,73} %write{2147483647,-1}
const	string	$const14	"microfacet"		%read{63,64} %write{2147483647,-1}
const	vector	$const15	0 0 0		%read{71,73} %write{2147483647,-1}
temp	int	$tmp28	%read{66,66} %write{65,65}
temp	float	$tmp29	%read{68,68} %write{67,67}
const	color	$const16	0 0 0		%read{71,452} %write{2147483647,-1}
const	float	$const17	0.5		%read{71,574} %write{2147483647,-1}
const	string	$const18	"as_glass"		%read{71,374} %write{2147483647,-1}
const	string	$const19	"as_glossy"		%read{73,386} %write{2147483647,-1}
temp	color	$tmp34	%read{76,76} %write{75,75}
temp	closure color	$tmp35	%read{77,77} %write{76,76}
temp	float	$tmp36	%read{80,80} %write{78,78}
temp	float	$tmp37	%read{80,80} %write{79,79}
temp	float	$tmp38	%read{82,82} %write{80,80}
const	string	$const20	"sqr"		%read{81,565} %write{2147483647,-1}
temp	float	$tmp39	%read{86,86} %write{83,83}
temp	float	$tmp40	%read{86,86} %write{85,85}
temp	float	$tmp41	%read{85,85} %write{84,84}
const	float	$const21	5		%read{85,441} %write{2147483647,-1}
temp	float	$tmp42	%read{87,87} %write{86,86}
temp	float	$tmp43	%read{91,91} %write{90,90}
const	string	$const22	"clamp"		%read{88,639} %write{2147483647,-1}
temp	float	$tmp44	%read{90,90} %write{89,89}
temp	float	$tmp45	%read{92,92} %write{91,91}
temp	float	$tmp46	%read{99,99} %write{98,98}
temp	float	$tmp47	%read{98,98} %write{94,94}
temp	float	$tmp48	%read{98,98} %write{97,97}
temp	float	$tmp49	%read{97,97} %write{95,95}
temp	float	$tmp50	%read{97,97} %write{96,96}
temp	int	$tmp51	%read{100,100} %write{99,99}
temp	int	$tmp52	%read{101,111} %write{100,110}
temp	float	$tmp53	%read{108,108} %write{107,107}
const	string	$const23	"min"		%read{102,102} %write{2147483647,-1}
temp	float	$tmp54	%read{107,107} %write{103,103}
temp	float	$tmp55	%read{107,107} %write{106,106}
temp	float	$tmp56	%read{106,106} %write{104,104}
temp	float	$tmp57	%read{106,106} %write{105,105}
temp	int	$tmp58	%read{109,109} %write{108,108}
temp	int	$tmp59	%read{110,110} %write{109,109}
const	float	$const24	10000		%read{117,117} %write{2147483647,-1}
temp	float	$tmp60	%read{117,117} %write{116,116}
temp	float	$tmp61	%read{116,116} %write{114,114}
temp	float	$tmp62	%read{119,119} %write{118,118}
temp	float	$tmp63	%read{120,120} %write{119,119}
temp	color	$tmp64	%read{125,125} %write{121,121}
const	float	$const25	0.99000001		%read{122,638} %write{2147483647,-1}
temp	color	$tmp65	%read{124,124} %write{122,122}
temp	color	$tmp66	%read{125,125} %write{124,124}
temp	float	$tmp67	%read{127,127} %write{126,126}
temp	color	$tmp68	%read{128,128} %write{127,127}
temp	color	$tmp69	%read{134,134} %write{133,133}
temp	color	$tmp70	%read{133,133} %write{129,129}
temp	color	$tmp71	%read{132,132} %write{130,130}
temp	color	$tmp72	%read{133,133} %write{132,132}
temp	float	$tmp73	%read{141,141} %write{140,140}
temp	float	$tmp74	%read{140,140} %write{136,136}
temp	float	$tmp75	%read{140,140} %write{139,139}
temp	float	$tmp76	%read{139,139} %write{137,137}
temp	float	$tmp77	%read{139,139} %write{138,138}
const	float	$const26	1e-06		%read{141,590} %write{2147483647,-1}
temp	int	$tmp78	%read{142,142} %write{141,141}
temp	int	$tmp79	%read{145,145} %write{144,144}
temp	int	$tmp80	%read{146,156} %write{145,155}
temp	float	$tmp81	%read{153,153} %write{152,152}
temp	float	$tmp82	%read{152,152} %write{148,148}
temp	float	$tmp83	%read{152,152} %write{151,151}
temp	float	$tmp84	%read{151,151} %write{149,149}
temp	float	$tmp85	%read{151,151} %write{150,150}
temp	int	$tmp86	%read{154,154} %write{153,153}
temp	int	$tmp87	%read{155,155} %write{154,154}
temp	int	$tmp88	%read{160,160} %write{159,159}
temp	int	$tmp89	%read{161,171} %write{160,170}
temp	float	$tmp90	%read{168,168} %write{167,167}
temp	float	$tmp91	%read{167,167} %write{163,163}
temp	float	$tmp92	%read{167,167} %write{166,166}
temp	float	$tmp93	%read{166,166} %write{164,164}
temp	float	$tmp94	%read{166,166} %write{165,165}
temp	int	$tmp95	%read{169,169} %write{168,168}
temp	int	$tmp96	%read{170,170} %write{169,169}
temp	int	$tmp97	%read{175,185} %write{174,184}
temp	float	$tmp98	%read{182,182} %write{181,181}
temp	float	$tmp99	%read{181,181} %write{177,177}
temp	float	$tmp100	%read{181,181} %write{180,180}
temp	float	$tmp101	%read{180,180} %write{178,178}
temp	float	$tmp102	%read{180,180} %write{179,179}
temp	int	$tmp103	%read{183,183} %write{182,182}
temp	int	$tmp104	%read{184,184} %write{183,183}
temp	int	$tmp105	%read{186,212} %write{185,211}
temp	int	$tmp106	%read{188,188} %write{187,187}
temp	int	$tmp107	%read{189,210} %write{188,209}
temp	float	$tmp108	%read{196,196} %write{195,195}
temp	float	$tmp109	%read{195,195} %write{191,191}
temp	float	$tmp110	%read{195,195} %write{194,194}
temp	float	$tmp111	%read{194,194} %write{192,192}
temp	float	$tmp112	%read{194,194} %write{193,193}
temp	int	$tmp113	%read{197,197} %write{196,196}
temp	int	$tmp114	%read{198,208} %write{197,207}
temp	float	$tmp115	%read{205,205} %write{204,204}
temp	float	$tmp116	%read{204,204} %write{200,200}
temp	float	$tmp117	%read{204,204} %write{203,203}
temp	float	$tmp118	%read{203,203} %write{201,201}
temp	float	$tmp119	%read{203,203} %write{202,202}
temp	int	$tmp120	%read{206,206} %write{205,205}
temp	int	$tmp121	%read{207,207} %write{206,206}
temp	int	$tmp122	%read{209,209} %write{208,208}
temp	int	$tmp123	%read{211,211} %write{210,210}
temp	int	$tmp124	%read{216,216} %write{215,215}
temp	int	$tmp125	%read{217,227} %write{216,226}
temp	float	$tmp126	%read{224,224} %write{223,223}
temp	float	$tmp127	%read{223,223} %write{219,219}
temp	float	$tmp128	%read{223,223} %write{222,222}
temp	float	$tmp129	%read{222,222} %write{220,220}
temp	float	$tmp130	%read{222,222} %write{221,221}
temp	int	$tmp131	%read{225,225} %write{224,224}
temp	int	$tmp132	%read{226,226} %write{225,225}
temp	int	$tmp133	%read{231,231} %write{230,230}
temp	int	$tmp134	%read{232,235} %write{231,234}
temp	int	$tmp135	%read{234,234} %write{233,233}
temp	int	$tmp136	%read{236,239} %write{235,238}
temp	int	$tmp137	%read{238,238} %write{237,237}
temp	int	$tmp138	%read{240,243} %write{239,242}
temp	int	$tmp139	%read{242,242} %write{241,241}
temp	int	$tmp140	%read{244,248} %write{243,247}
temp	int	$tmp141	%read{246,246} %write{245,245}
temp	int	$tmp142	%read{247,247} %write{246,246}
temp	int	$tmp143	%read{249,259} %write{248,258}
temp	float	$tmp144	%read{256,256} %write{255,255}
temp	float	$tmp145	%read{255,255} %write{251,251}
temp	float	$tmp146	%read{255,255} %write{254,254}
temp	float	$tmp147	%read{254,254} %write{252,252}
temp	float	$tmp148	%read{254,254} %write{253,253}
temp	int	$tmp149	%read{257,257} %write{256,256}
temp	int	$tmp150	%read{258,258} %write{257,257}
const	int	$const27	798		%read{262,262} %write{2147483647,-1}
temp	int	$tmp151	%read{263,263} %write{262,262}
temp	int	$tmp152	%read{264,274} %write{263,273}
temp	float	$tmp153	%read{271,271} %write{270,270}
temp	float	$tmp154	%read{270,270} %write{266,266}
temp	float	$tmp155	%read{270,270} %write{269,269}
temp	float	$tmp156	%read{269,269} %write{267,267}
temp	float	$tmp157	%read{269,269} %write{268,268}
temp	int	$tmp158	%read{272,272} %write{271,271}
temp	int	$tmp159	%read{273,273} %write{272,272}
temp	int	$tmp160	%read{282,282} %write{281,281}
temp	int	$tmp161	%read{284,284} %write{283,283}
const	float	$const28	2		%read{285,559} %write{2147483647,-1}
temp	vector	$tmp162	%read{286,286} %write{285,285}
temp	vector	$tmp163	%read{287,287} %write{286,286}
temp	float	$tmp164	%read{289,289} %write{288,288}
temp	vector	$tmp165	%read{292,292} %write{289,289}
temp	float	$tmp166	%read{291,291} %write{290,290}
temp	vector	$tmp167	%read{292,292} %write{291,291}
temp	vector	$tmp168	%read{295,295} %write{292,292}
temp	float	$tmp169	%read{294,294} %write{293,293}
temp	normal	$tmp170	%read{295,295} %write{294,294}
temp	vector	$tmp171	%read{296,296} %write{295,295}
temp	int	$tmp172	%read{298,298} %write{297,297}
const	float	$const29	6.2831855		%read{299,299} %write{2147483647,-1}
temp	float	$tmp173	%read{304,304} %write{299,299}
const	point	$const30	0 0 0		%read{302,351} %write{2147483647,-1}
temp	point	$tmp175	%read{302,302} %write{300,300}
const	string	$const31	"rotate"		%read{301,301} %write{2147483647,-1}
temp	vector	$tmp176	%read{303,303} %write{302,302}
temp	float	$tmp177	%read{313,313} %write{309,309}
temp	float	$tmp178	%read{311,311} %write{310,310}
temp	float	$tmp179	%read{312,312} %write{311,311}
temp	float	$tmp180	%read{313,313} %write{312,312}
temp	float	$tmp181	%read{348,348} %write{313,313}
temp	float	$tmp182	%read{315,315} %write{314,314}
temp	float	$tmp183	%read{317,317} %write{315,315}
temp	float	$tmp184	%read{317,317} %write{316,316}
temp	float	$tmp185	%read{348,348} %write{317,317}
temp	float	$tmp186	%read{319,319} %write{318,318}
temp	float	$tmp187	%read{321,321} %write{319,319}
temp	float	$tmp188	%read{321,321} %write{320,320}
temp	float	$tmp189	%read{348,348} %write{321,321}
temp	float	$tmp190	%read{323,323} %write{322,322}
temp	float	$tmp191	%read{325,325} %write{323,323}
temp	float	$tmp192	%read{325,325} %write{324,324}
temp	float	$tmp193	%read{348,348} %write{325,325}
temp	float	$tmp194	%read{330,330} %write{326,326}
temp	float	$tmp195	%read{328,328} %write{327,327}
temp	float	$tmp196	%read{329,329} %write{328,328}
temp	float	$tmp197	%read{330,330} %write{329,329}
temp	float	$tmp198	%read{348,348} %write{330,330}
temp	float	$tmp199	%read{332,332} %write{331,331}
temp	float	$tmp200	%read{334,334} %write{332,332}
temp	float	$tmp201	%read{334,334} %write{333,333}
temp	float	$tmp202	%read{348,348} %write{334,334}
temp	float	$tmp203	%read{336,336} %write{335,335}
temp	float	$tmp204	%read{338,338} %write{336,336}
temp	float	$tmp205	%read{338,338} %write{337,337}
temp	float	$tmp206	%read{348,348} %write{338,338}
temp	float	$tmp207	%read{340,340} %write{339,339}
temp	float	$tmp208	%read{342,342} %write{340,340}
temp	float	$tmp209	%read{342,342} %write{341,341}
temp	float	$tmp210	%read{348,348} %write{342,342}
temp	float	$tmp211	%read{347,347} %write{343,343}
temp	float	$tmp212	%read{345,345} %write{344,344}
temp	float	$tmp213	%read{346,346} %write{345,345}
temp	float	$tmp214	%read{347,347} %write{346,346}
temp	float	$tmp215	%read{348,348} %write{347,347}
temp	vector	$tmp216	%read{351,351} %write{350,350}
temp	vector	$tmp217	%read{350,350} %write{349,349}
temp	int	$tmp218	%read{353,353} %write{352,352}
temp	int	$tmp219	%read{356,356} %write{355,355}
temp	int	$tmp220	%read{357,361} %write{356,360}
temp	int	$tmp221	%read{359,359} %write{358,358}
temp	int	$tmp222	%read{360,360} %write{359,359}
temp	int	$tmp223	%read{362,372} %write{361,371}
temp	float	$tmp224	%read{369,369} %write{368,368}
temp	float	$tmp225	%read{368,368} %write{364,364}
temp	float	$tmp226	%read{368,368} %write{367,367}
temp	float	$tmp227	%read{367,367} %write{365,365}
temp	float	$tmp228	%read{367,367} %write{366,366}
temp	int	$tmp229	%read{370,370} %write{369,369}
temp	int	$tmp230	%read{371,371} %write{370,370}
temp	closure color	$tmp231	%read{375,375} %write{374,374}
const	string	$const32	"std"		%read{374,400} %write{2147483647,-1}
temp	float	$tmp232	%read{374,374} %write{373,373}
temp	closure color	$tmp233	%read{376,376} %write{375,375}
temp	float	$tmp234	%read{383,383} %write{382,382}
temp	float	$tmp235	%read{382,382} %write{378,378}
temp	float	$tmp236	%read{382,382} %write{381,381}
temp	float	$tmp237	%read{381,381} %write{379,379}
temp	float	$tmp238	%read{381,381} %write{380,380}
temp	int	$tmp239	%read{384,384} %write{383,383}
temp	closure color	$tmp240	%read{389,389} %write{386,386}
temp	float	$tmp241	%read{386,386} %write{385,385}
temp	color	$tmp242	%read{388,388} %write{387,387}
temp	color	$tmp243	%read{389,389} %write{388,388}
temp	closure color	$tmp244	%read{390,390} %write{389,389}
temp	float	$tmp245	%read{397,397} %write{396,396}
temp	float	$tmp246	%read{396,396} %write{392,392}
temp	float	$tmp247	%read{396,396} %write{395,395}
temp	float	$tmp248	%read{395,395} %write{393,393}
temp	float	$tmp249	%read{395,395} %write{394,394}
temp	int	$tmp250	%read{398,398} %write{397,397}
temp	closure color	$tmp251	%read{403,403} %write{400,400}
temp	float	$tmp252	%read{400,400} %write{399,399}
const	string	$const33	"as_metal"		%read{400,400} %write{2147483647,-1}
temp	color	$tmp253	%read{402,402} %write{401,401}
temp	color	$tmp254	%read{403,403} %write{402,402}
temp	closure color	$tmp255	%read{404,404} %write{403,403}
temp	int	$tmp256	%read{406,409} %write{405,408}
temp	int	$tmp257	%read{408,408} %write{407,407}
temp	int	$tmp258	%read{410,413} %write{409,412}
temp	int	$tmp259	%read{412,412} %write{411,411}
temp	int	$tmp260	%read{414,417} %write{413,416}
temp	int	$tmp261	%read{416,416} %write{415,415}
temp	int	$tmp262	%read{418,428} %write{417,427}
temp	float	$tmp263	%read{425,425} %write{424,424}
temp	float	$tmp264	%read{424,424} %write{420,420}
temp	float	$tmp265	%read{424,424} %write{423,423}
temp	float	$tmp266	%read{423,423} %write{421,421}
temp	float	$tmp267	%read{423,423} %write{422,422}
temp	int	$tmp268	%read{426,426} %write{425,425}
temp	int	$tmp269	%read{427,427} %write{426,426}
temp	vector	$tmp270	%read{430,430} %write{429,429}
temp	vector	$tmp271	%read{431,431} %write{430,430}
temp	int	$tmp272	%read{433,433} %write{432,432}
temp	float	$tmp273	%read{436,436} %write{434,434}
temp	float	$tmp274	%read{436,436} %write{435,435}
temp	float	$tmp275	%read{438,438} %write{436,436}
temp	float	$tmp276	%read{442,442} %write{439,439}
temp	float	$tmp277	%read{442,442} %write{441,441}
temp	float	$tmp278	%read{441,441} %write{440,440}
temp	float	$tmp279	%read{443,443} %write{442,442}
temp	float	$tmp280	%read{447,447} %write{446,446}
temp	float	$tmp281	%read{446,446} %write{445,445}
temp	float	$tmp282	%read{448,448} %write{447,447}
const	string	$const34	"get_eta"		%read{453,478} %write{2147483647,-1}
temp	float	$tmp283	%read{487,487} %write{464,464}
temp	float	$tmp284	%read{457,460} %write{454,454}
temp	float	$tmp285	%read{464,464} %write{455,455}
temp	float	$tmp286	%read{459,459} %write{457,457}
temp	float	$tmp287	%read{459,459} %write{458,458}
temp	float	$tmp288	%read{463,463} %write{461,461}
temp	float	$tmp289	%read{463,463} %write{462,462}
temp	float	$tmp290	%read{487,487} %write{475,475}
temp	float	$tmp291	%read{468,471} %write{465,465}
temp	float	$tmp292	%read{475,475} %write{466,466}
temp	float	$tmp293	%read{470,470} %write{468,468}
temp	float	$tmp294	%read{470,470} %write{469,469}
temp	float	$tmp295	%read{474,474} %write{472,472}
temp	float	$tmp296	%read{474,474} %write{473,473}
temp	float	$tmp297	%read{487,487} %write{486,486}
temp	float	$tmp298	%read{479,482} %write{476,476}
temp	float	$tmp299	%read{486,486} %write{477,477}
temp	float	$tmp300	%read{481,481} %write{479,479}
temp	float	$tmp301	%read{481,481} %write{480,480}
temp	float	$tmp302	%read{485,485} %write{483,483}
temp	float	$tmp303	%read{485,485} %write{484,484}
const	string	$const35	"get_kappa"		%read{488,519} %write{2147483647,-1}
temp	float	$tmp304	%read{531,531} %write{502,502}
temp	float	$tmp305	%read{495,500} %write{489,489}
temp	float	$tmp306	%read{492,496} %write{490,490}
temp	float	$tmp307	%read{495,495} %write{494,494}
temp	float	$tmp308	%read{494,494} %write{492,492}
temp	float	$tmp309	%read{499,499} %write{495,495}
temp	float	$tmp310	%read{499,499} %write{498,498}
temp	float	$tmp311	%read{498,498} %write{496,496}
temp	float	$tmp312	%read{501,501} %write{500,500}
temp	float	$tmp313	%read{502,502} %write{501,501}
temp	float	$tmp314	%read{531,531} %write{516,516}
temp	float	$tmp315	%read{509,514} %write{503,503}
temp	float	$tmp316	%read{506,510} %write{504,504}
temp	float	$tmp317	%read{509,509} %write{508,508}
temp	float	$tmp318	%read{508,508} %write{506,506}
temp	float	$tmp319	%read{513,513} %write{509,509}
temp	float	$tmp320	%read{513,513} %write{512,512}
temp	float	$tmp321	%read{512,512} %write{510,510}
temp	float	$tmp322	%read{515,515} %write{514,514}
temp	float	$tmp323	%read{516,516} %write{515,515}
temp	float	$tmp324	%read{531,531} %write{530,530}
temp	float	$tmp325	%read{523,528} %write{517,517}
temp	float	$tmp326	%read{520,524} %write{518,518}
temp	float	$tmp327	%read{523,523} %write{522,522}
temp	float	$tmp328	%read{522,522} %write{520,520}
temp	float	$tmp329	%read{527,527} %write{523,523}
temp	float	$tmp330	%read{527,527} %write{526,526}
temp	float	$tmp331	%read{526,526} %write{524,524}
temp	float	$tmp332	%read{529,529} %write{528,528}
temp	float	$tmp333	%read{530,530} %write{529,529}
const	int	$const36	3		%read{534,534} %write{2147483647,-1}
temp	int	$tmp334	%read{532,576} %write{533,576}
temp	float	$tmp335	%read{534,576} %write{534,576}
temp	float	$tmp336	%read{534,576} %write{534,576}
temp	float	$tmp337	%read{534,576} %write{534,576}
const	string	$const37	"dielectricConductorFresnel"		%read{537,537} %write{2147483647,-1}
temp	float	$tmp338	%read{534,576} %write{534,576}
temp	float	$tmp339	%read{534,576} %write{534,576}
const	float	$const38	4		%read{551,551} %write{2147483647,-1}
temp	float	$tmp340	%read{534,576} %write{534,576}
temp	float	$tmp341	%read{534,576} %write{534,576}
temp	float	$tmp342	%read{534,576} %write{534,576}
temp	float	$tmp343	%read{534,576} %write{534,576}
temp	float	$tmp344	%read{534,576} %write{534,576}
temp	float	$tmp345	%read{534,576} %write{534,576}
temp	float	$tmp346	%read{534,576} %write{534,576}
temp	float	$tmp347	%read{534,576} %write{534,576}
temp	float	$tmp348	%read{534,576} %write{534,576}
temp	float	$tmp349	%read{534,576} %write{534,576}
temp	float	$tmp350	%read{534,576} %write{534,576}
temp	float	$tmp351	%read{534,576} %write{534,576}
temp	float	$tmp352	%read{534,576} %write{534,576}
temp	float	$tmp353	%read{534,576} %write{534,576}
temp	color	$tmp354	%read{582,582} %write{581,581}
temp	color	$tmp355	%read{581,581} %write{577,577}
temp	color	$tmp356	%read{580,580} %write{578,578}
temp	color	$tmp357	%read{581,581} %write{580,580}
temp	float	$tmp358	%read{590,590} %write{589,589}
temp	float	$tmp359	%read{589,589} %write{585,585}
temp	float	$tmp360	%read{589,589} %write{588,588}
temp	float	$tmp361	%read{588,588} %write{586,586}
temp	float	$tmp362	%read{588,588} %write{587,587}
temp	int	$tmp363	%read{591,591} %write{590,590}
temp	int	$tmp364	%read{594,594} %write{593,593}
const	string	$const39	"light"		%read{593,593} %write{2147483647,-1}
temp	int	$tmp365	%read{595,598} %write{594,597}
temp	int	$tmp366	%read{597,597} %write{596,596}
temp	int	$tmp367	%read{600,600} %write{599,599}
temp	color	$tmp368	%read{604,604} %write{603,603}
temp	float	$tmp369	%read{603,603} %write{602,602}
temp	float	$tmp370	%read{607,607} %write{606,606}
temp	float	$tmp371	%read{608,608} %write{607,607}
temp	float	$tmp372	%read{616,616} %write{615,615}
temp	float	$tmp373	%read{615,615} %write{611,611}
temp	float	$tmp374	%read{615,615} %write{614,614}
temp	float	$tmp375	%read{614,614} %write{612,612}
temp	float	$tmp376	%read{614,614} %write{613,613}
temp	int	$tmp377	%read{617,617} %write{616,616}
temp	float	$tmp378	%read{620,620} %write{619,619}
temp	closure color	$tmp379	%read{623,623} %write{622,622}
const	string	$const40	"emission"		%read{622,622} %write{2147483647,-1}
temp	closure color	$tmp380	%read{624,624} %write{623,623}
temp	closure color	$tmp381	%read{625,625} %write{624,624}
temp	closure color	$tmp382	%read{626,626} %write{625,625}
temp	float	$tmp383	%read{635,635} %write{634,634}
temp	float	$tmp384	%read{634,634} %write{630,630}
temp	float	$tmp385	%read{634,634} %write{633,633}
temp	float	$tmp386	%read{633,633} %write{631,631}
temp	float	$tmp387	%read{633,633} %write{632,632}
temp	int	$tmp388	%read{636,636} %write{635,635}
const	float	$const41	0.0099999998		%read{637,637} %write{2147483647,-1}
temp	color	$tmp389	%read{641,641} %write{637,637}
temp	color	$tmp390	%read{640,640} %write{638,638}
temp	color	$tmp391	%read{641,641} %write{640,640}
temp	closure color	$tmp392	%read{645,645} %write{644,644}
const	string	$const42	"normalized_diffusion"		%read{644,644} %write{2147483647,-1}
temp	color	$tmp393	%read{644,644} %write{642,642}
temp	color	$tmp394	%read{644,644} %write{643,643}
const	string	$const43	"fresnel_weight"		%read{644,644} %write{2147483647,-1}
const	string	$const44	"as_subsurface"		%read{644,644} %write{2147483647,-1}
temp	closure color	$tmp395	%read{646,646} %write{645,645}
temp	float	$tmp396	%read{654,654} %write{653,653}
temp	float	$tmp397	%read{653,653} %write{649,649}
temp	float	$tmp398	%read{653,653} %write{652,652}
temp	float	$tmp399	%read{652,652} %write{650,650}
temp	float	$tmp400	%read{652,652} %write{651,651}
temp	int	$tmp401	%read{655,655} %write{654,654}
temp	closure color	$tmp402	%read{659,659} %write{656,656}
const	string	$const45	"oren_nayar"		%read{656,656} %write{2147483647,-1}
temp	color	$tmp403	%read{658,658} %write{657,657}
temp	color	$tmp404	%read{659,659} %write{658,658}
temp	closure color	$tmp405	%read{660,660} %write{659,659}
temp	float	$tmp406	%read{668,668} %write{667,667}
temp	float	$tmp407	%read{667,667} %write{663,663}
temp	float	$tmp408	%read{667,667} %write{666,666}
temp	float	$tmp409	%read{666,666} %write{664,664}
temp	float	$tmp410	%read{666,666} %write{665,665}
temp	int	$tmp411	%read{669,669} %write{668,668}
temp	closure color	$tmp412	%read{673,673} %write{670,670}
const	string	$const46	"translucent"		%read{670,670} %write{2147483647,-1}
temp	color	$tmp413	%read{672,672} %write{671,671}
temp	color	$tmp414	%read{673,673} %write{672,672}
temp	closure color	$tmp415	%read{674,674} %write{673,673}
code in_bump_normal_coating
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:431
#     ]],
	assign		in_bump_normal_coating N 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{431} %argrw{"wr"}
code in_bump_normal_substrate
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:439
#     ]],
	assign		in_bump_normal_substrate N 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{439} %argrw{"wr"}
code ___main___
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:521
#     int compute_transparency = (max(in_transparency) > 0.0) ? 1 : 0;
	functioncall	$const1 8 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{521} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp2 in_transparency $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp4 in_transparency $const3 	%argrw{"wrr"}
	compref		$tmp5 in_transparency $const4 	%argrw{"wrr"}
	max		$tmp3 $tmp4 $tmp5 	%argrw{"wrr"}
	max		$tmp1 $tmp2 $tmp3 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:521
#     [[
	gt		$tmp6 $tmp1 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{521} %argrw{"wrr"}
	if		$tmp6 11 12 	%argrw{"r"}
	assign		compute_transparency $const3 	%argrw{"wr"}
	assign		compute_transparency $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:523
#         string as_maya_attribute_short_name = "mrd",
	if		compute_transparency 16 16 	%line{523} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:525
#         int max = 32,
	closure		$tmp7 $const6 	%line{525} %argrw{"wr"}
	mul		out_outTransparency $tmp7 in_transparency 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:526
#         int softmax = 8,
	add		ClosureOut ClosureOut out_outTransparency 	%line{526} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:529
#         int as_maya_attribute_connectable = 0,
	raytype		$tmp8 $const7 	%line{529} %argrw{"wr"}
	neq		$tmp9 $tmp8 $const2 	%argrw{"wrr"}
	if		$tmp9 19 22 	%argrw{"r"}
	raytype		$tmp10 $const8 	%argrw{"wr"}
	neq		$tmp11 $tmp10 $const2 	%argrw{"wrr"}
	assign		$tmp9 $tmp11 	%argrw{"wr"}
	if		$tmp9 24 24 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:531
#         int as_maya_attribute_hidden = 1,
	exit	%line{531}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:534
#     vector Tn = vector(0)
	assign		ray_depth $const2 	%line{534} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:535
#     [[
	getattribute	status $const9 ray_depth 	%line{535} %argrw{"wrw"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:537
#         int as_maya_attribute_hidden = 1,
	eq		$tmp12 status $const2 	%line{537} %argrw{"wrr"}
	neq		$tmp13 $tmp12 $const2 	%argrw{"wrr"}
	if		$tmp13 29 32 	%argrw{"r"}
	gt		$tmp14 ray_depth in_maximum_ray_depth 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const2 	%argrw{"wrr"}
	assign		$tmp13 $tmp15 	%argrw{"wr"}
	if		$tmp13 34 34 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:539
#         int gafferNoduleLayoutVisible = 0
	exit	%line{539}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:542
#     [[
	if		in_enable_matte 39 39 	%line{542} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:545
#         string widget = "null",
	closure		$tmp16 $const10 	%line{545} %argrw{"wr"}
	mul		$tmp17 in_matte_opacity in_matte_opacity_color 	%argrw{"wrr"}
	mul		out_outMatteOpacity $tmp16 $tmp17 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:547
#     ]],
	add		ClosureOut ClosureOut out_outMatteOpacity 	%line{547} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:550
#         string as_maya_attribute_name = "outColor",
	eq		$tmp18 in_transparency $const11 	%line{550} %argrw{"wrr"}
	if		$tmp18 42 42 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:552
#         string widget = "null"
	exit	%line{552}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:555
#     [[
	sub		opacity $const11 in_transparency 	%line{555} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:560
#     output closure color out_outMatteOpacity = 0
	gt		$tmp19 in_coating_reflectivity $const5 	%line{560} %argrw{"wrr"}
	neq		$tmp20 $tmp19 $const2 	%argrw{"wrr"}
	if		$tmp20 46 49 	%argrw{"r"}
	gt		$tmp21 in_coating_depth $const5 	%argrw{"wrr"}
	neq		$tmp22 $tmp21 $const2 	%argrw{"wrr"}
	assign		$tmp20 $tmp22 	%argrw{"wr"}
	if		$tmp20 51 52 	%argrw{"r"}
	assign		compute_coating $const3 	%argrw{"wr"}
	assign		compute_coating $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:562
#         string as_maya_attribute_name = "outMatteOpacity",
	assign		coating_transmittance $const12 	%line{562} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:564
#         string widget = "null",
	if		compute_coating 144 144 	%line{564} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:566
#         int gafferNoduleLayoutVisible = 0
	normalize	___378_In I 	%line{566} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:568
# )
	isconnected	$tmp23 in_bump_normal_coating 	%line{568} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:570
#     int compute_transparency = (max(in_transparency) > 0.0) ? 1 : 0;
	if		$tmp23 58 59 	%line{570} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:569
#             ? normalize(in_bump_normal_coating)
	normalize	___378_Nn in_bump_normal_coating 	%line{569} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:570
#             : normalize(in_bump_normal_substrate);
	normalize	___378_Nn in_bump_normal_substrate 	%line{570} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:572
#         float costheta_o = dot(-In, Nn);
	neg		$tmp24 ___378_In 	%line{572} %argrw{"wr"}
	dot		___378_costheta_o $tmp24 ___378_Nn 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:574
#         if (in_coating_ior > 1.0)
	gt		$tmp25 in_coating_ior $const11 	%line{574} %argrw{"wrr"}
	if		$tmp25 93 93 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:582
#                     0);
	functioncall	$const14 75 	%line{582} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:613
# 
	functioncall	$const14 75 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{613} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:568
#     float anisotropy = (yalpha > 0.0) ? 1.0 - (xalpha / yalpha) : 0.0;
	gt		$tmp28 in_coating_roughness $const5 	%line{568} %argrw{"wrr"}
	if		$tmp28 69 70 	%argrw{"r"}
	div		$tmp29 in_coating_roughness in_coating_roughness 	%argrw{"wrr"}
	sub		___331_anisotropy $const11 $tmp29 	%argrw{"wrr"}
	assign		___331_anisotropy $const5 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:570
#     if (refract)
	if		$const2 73 75 	%line{570} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:584
#             0.0);       // volume transmittance distance
	closure		$tmp26 $const18 $const13 ___378_Nn $const15 $const12 $const16 $const12 in_coating_roughness $const17 ___331_anisotropy in_coating_ior $const12 $const5 	%line{584} %argrw{"wrrrrrrrrrrrrr"}
	return
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:595
#             eta);
	closure		$tmp26 $const19 $const13 ___378_Nn $const15 in_coating_roughness $const17 ___331_anisotropy in_coating_ior 	%line{595} %argrw{"wrrrrrrrr"}
	return
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:577
#                 in_coating_reflectivity * microfacet(
	mul		$tmp34 opacity in_coating_reflectivity 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{577} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:582
#                     0);
	mul		$tmp35 $tmp26 $tmp34 	%line{582} %argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp35 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:586
#             float R0 = sqr((in_coating_ior - 1.0) / (in_coating_ior + 1.0));
	sub		$tmp36 in_coating_ior $const11 	%line{586} %argrw{"wrr"}
	add		$tmp37 in_coating_ior $const11 	%argrw{"wrr"}
	div		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
	functioncall	$const20 83 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		___379_R0 $tmp38 $tmp38 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:587
#         return;
	sub		$tmp39 $const11 ___379_R0 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{587} %argrw{"wrr"}
	sub		$tmp41 $const11 ___378_costheta_o 	%argrw{"wrr"}
	pow		$tmp40 $tmp41 $const21 	%argrw{"wrr"}
	mul		$tmp42 $tmp39 $tmp40 	%argrw{"wrr"}
	add		___379_Kr ___379_R0 $tmp42 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:589
# 
	functioncall	$const22 91 	%line{589} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp44 ___379_Kr $const11 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{145} %argrw{"wrr"}
	max		$tmp43 $tmp44 $const5 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:589
#         string widget = "checkBox",
	sub		$tmp45 $const11 $tmp43 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{589} %argrw{"wrr"}
	assign		coating_transmittance $tmp45 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:592
#         int as_maya_attribute_connectable = 0,
	functioncall	$const1 99 	%line{592} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp47 coating_transmittance $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp49 coating_transmittance $const3 	%argrw{"wrr"}
	compref		$tmp50 coating_transmittance $const4 	%argrw{"wrr"}
	max		$tmp48 $tmp49 $tmp50 	%argrw{"wrr"}
	max		$tmp46 $tmp47 $tmp48 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:592
#     {
	gt		$tmp51 $tmp46 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{592} %argrw{"wrr"}
	neq		$tmp52 $tmp51 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:593
#         out_outMatteOpacity = in_matte_opacity *
	if		$tmp52 111 111 	%line{593} %argrw{"r"}
	functioncall	$const23 108 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:48
# float min(color C)  { return min(C[0], min(C[1], C[2])); }
	compref		$tmp54 in_coating_absorption $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp56 in_coating_absorption $const3 	%argrw{"wrr"}
	compref		$tmp57 in_coating_absorption $const4 	%argrw{"wrr"}
	min		$tmp55 $tmp56 $tmp57 	%argrw{"wrr"}
	min		$tmp53 $tmp54 $tmp55 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:593
#             in_matte_opacity_color * holdout();
	lt		$tmp58 $tmp53 $const11 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{593} %argrw{"wrr"}
	neq		$tmp59 $tmp58 $const2 	%argrw{"wrr"}
	assign		$tmp52 $tmp59 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:592
#         if (max(coating_transmittance) > 0.0 &&
	if		$tmp52 135 135 	%line{592} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:595
#             color absorption_coeff = 1.0 - in_coating_absorption;
	sub		___380_absorption_coeff $const11 in_coating_absorption 	%line{595} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:599
#             float max_depth = 10000.0 * sqr(sqr(in_coating_depth));
	functioncall	$const20 115 	%line{599} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp61 in_coating_depth in_coating_depth 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:599
#     if (compute_coating)
	functioncall	$const20 117 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{599} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp60 $tmp61 $tmp61 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:599
#     if (compute_coating)
	mul		___380_max_depth $const24 $tmp60 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{599} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:600
#     {
	max		$tmp62 $const5 ___378_costheta_o 	%line{600} %argrw{"wrr"}
	sub		$tmp63 $const11 $tmp62 	%argrw{"wrr"}
	mul		___380_tau ___380_max_depth $tmp63 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:603
#         normal Nn = isconnected(in_bump_normal_coating)
	assign		$tmp64 $const5 	%line{603} %argrw{"wr"}
	assign		$tmp65 $const25 	%argrw{"wr"}
	functioncall	$const22 126 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp66 ___380_absorption_coeff $tmp65 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___380_absorption_coeff $tmp66 $tmp64 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:605
#         int gafferNoduleLayoutVisible = 0
	neg		$tmp67 ___380_tau 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{605} %argrw{"wr"}
	mul		$tmp68 $tmp67 ___380_absorption_coeff 	%argrw{"wrr"}
	exp		___380_fake_absorption $tmp68 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:607
#     color in_matte_opacity_color = color(1,0.5,0)
	assign		$tmp70 $const5 	%line{607} %argrw{"wr"}
	assign		$tmp71 $const11 	%argrw{"wr"}
	functioncall	$const22 134 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp72 ___380_fake_absorption $tmp71 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		$tmp69 $tmp72 $tmp70 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:607
#     color in_matte_opacity_color = color(1,0.5,0)
	mul		coating_transmittance coating_transmittance $tmp69 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{607} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:610
#         string as_maya_attribute_short_name = "mac",
	functioncall	$const1 141 	%line{610} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp74 coating_transmittance $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp76 coating_transmittance $const3 	%argrw{"wrr"}
	compref		$tmp77 coating_transmittance $const4 	%argrw{"wrr"}
	max		$tmp75 $tmp76 $tmp77 	%argrw{"wrr"}
	max		$tmp73 $tmp74 $tmp75 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:610
# 
	le		$tmp78 $tmp73 $const26 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{610} %argrw{"wrr"}
	if		$tmp78 144 144 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:612
# 
	exit	%line{612}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:617
#         normal Nn = isconnected(in_bump_normal_coating)
	gt		$tmp79 in_translucency_weight $const5 	%line{617} %argrw{"wrr"}
	neq		$tmp80 $tmp79 $const2 	%argrw{"wrr"}
	if		$tmp80 156 156 	%argrw{"r"}
	functioncall	$const1 153 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp82 in_translucency_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp84 in_translucency_color $const3 	%argrw{"wrr"}
	compref		$tmp85 in_translucency_color $const4 	%argrw{"wrr"}
	max		$tmp83 $tmp84 $tmp85 	%argrw{"wrr"}
	max		$tmp81 $tmp82 $tmp83 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:617
#         normal Nn = isconnected(in_bump_normal_coating)
	gt		$tmp86 $tmp81 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{617} %argrw{"wrr"}
	neq		$tmp87 $tmp86 $const2 	%argrw{"wrr"}
	assign		$tmp80 $tmp87 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:618
#             ? normalize(in_bump_normal_coating)
	if		$tmp80 158 159 	%line{618} %argrw{"r"}
	assign		compute_translucency $const3 	%argrw{"wr"}
	assign		compute_translucency $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:621
#         float costheta_o = dot(-In, Nn);
	gt		$tmp88 in_refraction_amount $const5 	%line{621} %argrw{"wrr"}
	neq		$tmp89 $tmp88 $const2 	%argrw{"wrr"}
	if		$tmp89 171 171 	%argrw{"r"}
	functioncall	$const1 168 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp91 in_refraction_tint $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp93 in_refraction_tint $const3 	%argrw{"wrr"}
	compref		$tmp94 in_refraction_tint $const4 	%argrw{"wrr"}
	max		$tmp92 $tmp93 $tmp94 	%argrw{"wrr"}
	max		$tmp90 $tmp91 $tmp92 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:621
#         float costheta_o = dot(-In, Nn);
	gt		$tmp95 $tmp90 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{621} %argrw{"wrr"}
	neq		$tmp96 $tmp95 $const2 	%argrw{"wrr"}
	assign		$tmp89 $tmp96 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:622
# 
	if		$tmp89 173 174 	%line{622} %argrw{"r"}
	assign		compute_transmission $const3 	%argrw{"wr"}
	assign		compute_transmission $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:625
#             ClosureOut += opacity *
	neq		$tmp97 compute_transmission $const2 	%line{625} %argrw{"wrr"}
	if		$tmp97 176 185 	%argrw{"r"}
	functioncall	$const1 182 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp99 in_specular_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp101 in_specular_color $const3 	%argrw{"wrr"}
	compref		$tmp102 in_specular_color $const4 	%argrw{"wrr"}
	max		$tmp100 $tmp101 $tmp102 	%argrw{"wrr"}
	max		$tmp98 $tmp99 $tmp100 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:625
#             ClosureOut += opacity *
	gt		$tmp103 $tmp98 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{625} %argrw{"wrr"}
	neq		$tmp104 $tmp103 $const2 	%argrw{"wrr"}
	assign		$tmp97 $tmp104 	%argrw{"wr"}
	neq		$tmp105 $tmp97 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:627
#                     "beckmann",
	if		$tmp105 212 212 	%line{627} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:626
#         (in_ior > 1.0 || max(in_face_tint) > 0.0 && max(in_edge_tint) > 0.0)
	gt		$tmp106 in_ior $const11 	%line{626} %argrw{"wrr"}
	neq		$tmp107 $tmp106 $const2 	%argrw{"wrr"}
	if		$tmp107 190 210 	%argrw{"r"}
	functioncall	$const1 196 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp109 in_face_tint $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp111 in_face_tint $const3 	%argrw{"wrr"}
	compref		$tmp112 in_face_tint $const4 	%argrw{"wrr"}
	max		$tmp110 $tmp111 $tmp112 	%argrw{"wrr"}
	max		$tmp108 $tmp109 $tmp110 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:626
#                 in_coating_reflectivity * microfacet(
	gt		$tmp113 $tmp108 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{626} %argrw{"wrr"}
	neq		$tmp114 $tmp113 $const2 	%argrw{"wrr"}
	if		$tmp114 208 208 	%argrw{"r"}
	functioncall	$const1 205 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp116 in_edge_tint $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp118 in_edge_tint $const3 	%argrw{"wrr"}
	compref		$tmp119 in_edge_tint $const4 	%argrw{"wrr"}
	max		$tmp117 $tmp118 $tmp119 	%argrw{"wrr"}
	max		$tmp115 $tmp116 $tmp117 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:626
#                 in_coating_reflectivity * microfacet(
	gt		$tmp120 $tmp115 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{626} %argrw{"wrr"}
	neq		$tmp121 $tmp120 $const2 	%argrw{"wrr"}
	assign		$tmp114 $tmp121 	%argrw{"wr"}
	neq		$tmp122 $tmp114 $const2 	%argrw{"wrr"}
	assign		$tmp107 $tmp122 	%argrw{"wr"}
	neq		$tmp123 $tmp107 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:627
#                     "beckmann",
	assign		$tmp105 $tmp123 	%line{627} %argrw{"wr"}
	if		$tmp105 214 215 	%argrw{"r"}
	assign		compute_specular $const3 	%argrw{"wr"}
	assign		compute_specular $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:630
#                     in_coating_ior,
	gt		$tmp124 in_diffuse_weight $const5 	%line{630} %argrw{"wrr"}
	neq		$tmp125 $tmp124 $const2 	%argrw{"wrr"}
	if		$tmp125 227 227 	%argrw{"r"}
	functioncall	$const1 224 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp127 in_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp129 in_color $const3 	%argrw{"wrr"}
	compref		$tmp130 in_color $const4 	%argrw{"wrr"}
	max		$tmp128 $tmp129 $tmp130 	%argrw{"wrr"}
	max		$tmp126 $tmp127 $tmp128 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:630
#                     in_coating_ior,
	gt		$tmp131 $tmp126 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{630} %argrw{"wrr"}
	neq		$tmp132 $tmp131 $const2 	%argrw{"wrr"}
	assign		$tmp125 $tmp132 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:631
#                     0);
	if		$tmp125 229 230 	%line{631} %argrw{"r"}
	assign		compute_diffuse $const3 	%argrw{"wr"}
	assign		compute_diffuse $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:634
# 
	gt		$tmp133 ray_depth in_sss_maximum_ray_depth 	%line{634} %argrw{"wrr"}
	neq		$tmp134 $tmp133 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:635
#             float R0 = sqr((in_coating_ior - 1.0) / (in_coating_ior + 1.0));
	if		$tmp134 233 235 	%line{635} %argrw{"r"}
	neq		$tmp135 compute_transparency $const2 	%argrw{"wrr"}
	assign		$tmp134 $tmp135 	%argrw{"wr"}
	neq		$tmp136 $tmp134 $const2 	%argrw{"wrr"}
	if		$tmp136 237 239 	%argrw{"r"}
	neq		$tmp137 compute_translucency $const2 	%argrw{"wrr"}
	assign		$tmp136 $tmp137 	%argrw{"wr"}
	neq		$tmp138 $tmp136 $const2 	%argrw{"wrr"}
	if		$tmp138 241 243 	%argrw{"r"}
	neq		$tmp139 compute_transmission $const2 	%argrw{"wrr"}
	assign		$tmp138 $tmp139 	%argrw{"wr"}
	neq		$tmp140 $tmp138 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:636
#             float Kr = R0 + (1.0 - R0) * pow(1.0 - costheta_o, 5.0);
	if		$tmp140 245 248 	%line{636} %argrw{"r"}
	eq		$tmp141 in_subsurface_weight $const5 	%argrw{"wrr"}
	neq		$tmp142 $tmp141 $const2 	%argrw{"wrr"}
	assign		$tmp140 $tmp142 	%argrw{"wr"}
	neq		$tmp143 $tmp140 $const2 	%argrw{"wrr"}
	if		$tmp143 250 259 	%argrw{"r"}
	functioncall	$const1 256 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp145 in_sss_mfp $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp147 in_sss_mfp $const3 	%argrw{"wrr"}
	compref		$tmp148 in_sss_mfp $const4 	%argrw{"wrr"}
	max		$tmp146 $tmp147 $tmp148 	%argrw{"wrr"}
	max		$tmp144 $tmp145 $tmp146 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:636
#             float Kr = R0 + (1.0 - R0) * pow(1.0 - costheta_o, 5.0);
	le		$tmp149 $tmp144 in_sss_threshold 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{636} %argrw{"wrr"}
	neq		$tmp150 $tmp149 $const2 	%argrw{"wrr"}
	assign		$tmp143 $tmp150 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:637
# 
	if		$tmp143 261 262 	%line{637} %argrw{"r"}
	assign		compute_bssrdf $const2 	%argrw{"wr"}
	assign		compute_bssrdf $const3 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:640
# 
	gt		$tmp151 in_temperature $const27 	%line{640} %argrw{"wrr"}
	neq		$tmp152 $tmp151 $const2 	%argrw{"wrr"}
	if		$tmp152 265 274 	%argrw{"r"}
	functioncall	$const1 271 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp154 in_incandescence_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp156 in_incandescence_color $const3 	%argrw{"wrr"}
	compref		$tmp157 in_incandescence_color $const4 	%argrw{"wrr"}
	max		$tmp155 $tmp156 $tmp157 	%argrw{"wrr"}
	max		$tmp153 $tmp154 $tmp155 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:640
# 
	gt		$tmp158 $tmp153 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{640} %argrw{"wrr"}
	neq		$tmp159 $tmp158 $const2 	%argrw{"wrr"}
	assign		$tmp152 $tmp159 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:641
#         if (max(coating_transmittance) > 0.0 &&
	if		$tmp152 276 277 	%line{641} %argrw{"r"}
	assign		compute_edf $const3 	%argrw{"wr"}
	assign		compute_edf $const2 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:645
# 
	assign		substrate_transmittance $const12 	%line{645} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:646
#             // Arbitrary value, it seems to provide a good (visual) range.
	normalize	Nn in_bump_normal_substrate 	%line{646} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:648
#             float max_depth = 10000.0 * sqr(sqr(in_coating_depth));
	if		compute_specular 583 583 	%line{648} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:650
# 
	assign		___382_tangent Tn 	%line{650} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:652
#             absorption_coeff = clamp(absorption_coeff, 0.0, 0.99);
	gt		$tmp160 in_anisotropy_amount $const5 	%line{652} %argrw{"wrr"}
	if		$tmp160 352 352 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:654
#             color fake_absorption = exp(-tau * absorption_coeff);
	isconnected	$tmp161 in_anisotropy_map 	%line{654} %argrw{"wr"}
	if		$tmp161 297 297 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:657
#         }
	mul		$tmp162 in_anisotropy_map $const28 	%line{657} %argrw{"wrr"}
	sub		$tmp163 $tmp162 $const11 	%argrw{"wrr"}
	normalize	___384_vector_map $tmp163 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:660
#         {
	compref		$tmp164 ___384_vector_map $const2 	%line{660} %argrw{"wrr"}
	mul		$tmp165 $tmp164 Tn 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:661
#             return;
	compref		$tmp166 ___384_vector_map $const3 	%line{661} %argrw{"wrr"}
	mul		$tmp167 $tmp166 Bn 	%argrw{"wrr"}
	add		$tmp168 $tmp165 $tmp167 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:662
#         }
	compref		$tmp169 ___384_vector_map $const4 	%line{662} %argrw{"wrr"}
	mul		$tmp170 $tmp169 Nn 	%argrw{"wrr"}
	add		$tmp171 $tmp168 $tmp170 	%argrw{"wrr"}
	normalize	___382_tangent $tmp171 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:665
#     int compute_translucency =
	gt		$tmp172 in_anisotropy_angle $const5 	%line{665} %argrw{"wrr"}
	if		$tmp172 352 352 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:669
#     int compute_transmission =
	mul		$tmp173 in_anisotropy_angle $const29 	%line{669} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:671
#         ? 1 : 0;
	assign		$tmp175 Nn 	%line{671} %argrw{"wr"}
	functioncall	$const31 352 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp176 $tmp175 $const30 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp176 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp173 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const11 ___254_cosang 	%line{277} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const2 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const3 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const4 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp177 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp178 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp179 $const11 $tmp178 	%argrw{"wrr"}
	mul		$tmp180 $tmp179 ___254_cosang 	%argrw{"wrr"}
	add		$tmp181 $tmp177 $tmp180 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp182 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp183 $tmp182 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp184 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp185 $tmp183 $tmp184 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp186 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp187 $tmp186 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp188 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp189 $tmp187 $tmp188 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp190 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp191 $tmp190 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp192 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp193 $tmp191 $tmp192 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp194 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp195 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp196 $const11 $tmp195 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___254_cosang 	%argrw{"wrr"}
	add		$tmp198 $tmp194 $tmp197 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp199 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp200 $tmp199 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp201 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp202 $tmp200 $tmp201 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp203 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp204 $tmp203 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp205 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp206 $tmp204 $tmp205 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp207 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp208 $tmp207 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp209 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp210 $tmp208 $tmp209 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp211 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp212 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp213 $const11 $tmp212 	%argrw{"wrr"}
	mul		$tmp214 $tmp213 ___254_cosang 	%argrw{"wrr"}
	add		$tmp215 $tmp211 $tmp214 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:291
#                        0.0, 0.0, 0.0, 1.0);
	matrix		___254_M $tmp181 $tmp185 $tmp189 $const5 $tmp193 $tmp198 $tmp202 $const5 $tmp206 $tmp210 $tmp215 $const5 $const5 $const5 $const5 $const11 	%line{291} %argrw{"wrrrrrrrrrrrrrrrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp217 ___382_tangent $const30 	%line{292} %argrw{"wrr"}
	transformv	$tmp216 ___254_M $tmp217 	%argrw{"wrr"}
	add		___382_tangent $tmp216 $const30 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:677
#         int divider = 1,
	eq		$tmp218 in_fresnel_type $const2 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{677} %argrw{"wrr"}
	if		$tmp218 391 405 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:679
#         int as_maya_attribute_keyable = 0,
	mul		___386_refraction_color in_refraction_amount in_refraction_tint 	%line{679} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:691
#         int as_maya_attribute_connectable = 0,
	eq		$tmp219 compute_coating $const2 	%line{691} %argrw{"wrr"}
	neq		$tmp220 $tmp219 $const2 	%argrw{"wrr"}
	if		$tmp220 361 361 	%argrw{"r"}
	eq		$tmp221 in_coating_depth $const5 	%argrw{"wrr"}
	neq		$tmp222 $tmp221 $const2 	%argrw{"wrr"}
	assign		$tmp220 $tmp222 	%argrw{"wr"}
	neq		$tmp223 $tmp220 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:692
#         int as_maya_attribute_keyable = 0,
	if		$tmp223 372 372 	%line{692} %argrw{"r"}
	functioncall	$const1 369 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp225 ___386_refraction_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp227 ___386_refraction_color $const3 	%argrw{"wrr"}
	compref		$tmp228 ___386_refraction_color $const4 	%argrw{"wrr"}
	max		$tmp226 $tmp227 $tmp228 	%argrw{"wrr"}
	max		$tmp224 $tmp225 $tmp226 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:692
#     // Specular first, to get the transmittance amount and bailout earlier.
	gt		$tmp229 $tmp224 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{692} %argrw{"wrr"}
	neq		$tmp230 $tmp229 $const2 	%argrw{"wrr"}
	assign		$tmp223 $tmp230 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:691
#             if (!compute_coating && in_coating_depth == 0.0 &&
	if		$tmp223 377 391 	%line{691} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:702
#                     coating_transmittance,
	sub		$tmp232 $const11 in_specular_spread 	%line{702} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:706
#                     in_specular_roughness,
	closure		$tmp231 $const18 $const32 Nn ___382_tangent coating_transmittance in_specular_color ___386_refraction_color in_specular_roughness $tmp232 in_anisotropy_amount in_ior in_absorption_color in_absorption_depth 	%line{706} %argrw{"wrrrrrrrrrrrrr"}
	mul		$tmp233 $tmp231 opacity 	%argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp233 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:708
#                     in_anisotropy_amount,
	functioncall	$const1 383 	%line{708} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp235 in_specular_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp237 in_specular_color $const3 	%argrw{"wrr"}
	compref		$tmp238 in_specular_color $const4 	%argrw{"wrr"}
	max		$tmp236 $tmp237 $tmp238 	%argrw{"wrr"}
	max		$tmp234 $tmp235 $tmp236 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:708
#                 tangent = normalize(
	gt		$tmp239 $tmp234 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{708} %argrw{"wrr"}
	if		$tmp239 391 391 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:716
#                 tangent = rotate(
	sub		$tmp241 $const11 in_specular_spread 	%line{716} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:718
#                     in_anisotropy_angle * M_2PI,
	closure		$tmp240 $const19 $const32 Nn ___382_tangent in_specular_roughness $tmp241 in_anisotropy_amount in_ior 	%line{718} %argrw{"wrrrrrrrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:710
#                     in_absorption_color,
	mul		$tmp242 coating_transmittance opacity 	%line{710} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:711
#                     in_absorption_depth);
	mul		$tmp243 $tmp242 in_specular_color 	%line{711} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:718
#                         Nn,
	mul		$tmp244 $tmp240 $tmp243 	%line{718} %argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp244 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:721
#                         1.0 - in_specular_spread,
	functioncall	$const1 397 	%line{721} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp246 in_specular_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp248 in_specular_color $const3 	%argrw{"wrr"}
	compref		$tmp249 in_specular_color $const4 	%argrw{"wrr"}
	max		$tmp247 $tmp248 $tmp249 	%argrw{"wrr"}
	max		$tmp245 $tmp246 $tmp247 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:721
#             }
	gt		$tmp250 $tmp245 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{721} %argrw{"wrr"}
	if		$tmp250 405 405 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:731
#             if (compute_coating || in_coating_depth > 0.0)
	sub		$tmp252 $const11 in_specular_spread 	%line{731} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:732
#             {
	closure		$tmp251 $const33 $const32 Nn ___382_tangent in_face_tint in_edge_tint in_specular_roughness $tmp252 in_anisotropy_amount 	%line{732} %argrw{"wrrrrrrrrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:723
#                         in_ior);
	mul		$tmp253 coating_transmittance opacity 	%line{723} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:724
#             }
	mul		$tmp254 $tmp253 in_specular_color 	%line{724} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:732
#                     tangent,
	mul		$tmp255 $tmp251 $tmp254 	%line{732} %argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp255 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:743
#         if ((compute_diffuse || compute_bssrdf || compute_edf ||
	neq		$tmp256 compute_diffuse $const2 	%line{743} %argrw{"wrr"}
	if		$tmp256 407 409 	%argrw{"r"}
	neq		$tmp257 compute_bssrdf $const2 	%argrw{"wrr"}
	assign		$tmp256 $tmp257 	%argrw{"wr"}
	neq		$tmp258 $tmp256 $const2 	%argrw{"wrr"}
	if		$tmp258 411 413 	%argrw{"r"}
	neq		$tmp259 compute_edf $const2 	%argrw{"wrr"}
	assign		$tmp258 $tmp259 	%argrw{"wr"}
	neq		$tmp260 $tmp258 $const2 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:744
#             compute_translucency) && max(in_specular_color) > 0.0)
	if		$tmp260 415 417 	%line{744} %argrw{"r"}
	neq		$tmp261 compute_translucency $const2 	%argrw{"wrr"}
	assign		$tmp260 $tmp261 	%argrw{"wr"}
	neq		$tmp262 $tmp260 $const2 	%argrw{"wrr"}
	if		$tmp262 428 428 	%argrw{"r"}
	functioncall	$const1 425 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp264 in_specular_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp266 in_specular_color $const3 	%argrw{"wrr"}
	compref		$tmp267 in_specular_color $const4 	%argrw{"wrr"}
	max		$tmp265 $tmp266 $tmp267 	%argrw{"wrr"}
	max		$tmp263 $tmp264 $tmp265 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:744
#                 ClosureOut += opacity * as_glass(
	gt		$tmp268 $tmp263 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{744} %argrw{"wrr"}
	neq		$tmp269 $tmp268 $const2 	%argrw{"wrr"}
	assign		$tmp262 $tmp269 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:743
#         if ((compute_diffuse || compute_bssrdf || compute_edf ||
	if		$tmp262 583 583 	%line{743} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:746
#             float costheta_o = dot(-normalize(I), Nn);
	normalize	$tmp270 I 	%line{746} %argrw{"wr"}
	neg		$tmp271 $tmp270 	%argrw{"wr"}
	dot		___390_costheta_o $tmp271 Nn 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:748
#             if (in_fresnel_type == 0)
	eq		$tmp272 in_fresnel_type $const2 	%line{748} %argrw{"wrr"}
	if		$tmp272 449 583 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:750
#                 float R0 = sqr((in_ior - 1.0) / (in_ior + 1.0));
	sub		$tmp273 in_ior $const11 	%line{750} %argrw{"wrr"}
	add		$tmp274 in_ior $const11 	%argrw{"wrr"}
	div		$tmp275 $tmp273 $tmp274 	%argrw{"wrr"}
	functioncall	$const20 439 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		___391_R0 $tmp275 $tmp275 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:751
#                     in_specular_color * as_glossy(
	sub		$tmp276 $const11 ___391_R0 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{751} %argrw{"wrr"}
	sub		$tmp278 $const11 ___390_costheta_o 	%argrw{"wrr"}
	pow		$tmp277 $tmp278 $const21 	%argrw{"wrr"}
	mul		$tmp279 $tmp276 $tmp277 	%argrw{"wrr"}
	add		___391_Kr ___391_R0 $tmp279 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:753
#                         Nn,
	functioncall	$const22 447 	%line{753} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp281 ___391_Kr $const11 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{145} %argrw{"wrr"}
	max		$tmp280 $tmp281 $const5 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:753
#         }
	sub		$tmp282 $const11 $tmp280 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{753} %argrw{"wrr"}
	assign		substrate_transmittance $tmp282 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:757
#             return;
	if		compute_coating 451 452 	%line{757} %argrw{"r"}
	assign		___392_exterior_n in_coating_ior 	%argrw{"wr"}
	assign		___392_exterior_n $const11 	%argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:759
#     }
	assign		___392_Kr $const16 	%line{759} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:761
#     int compute_translucency =
	functioncall	$const34 488 	%line{761} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:82
#     return color(get_eta(f0[0], f90[0]),
	compref		$tmp284 in_face_tint $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{82} %argrw{"wrr"}
	compref		$tmp285 in_edge_tint $const2 	%argrw{"wrr"}
	functioncall	$const34 465 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:67
#     float eta_min = (1.0 - f0) / (1.0 + f0);
	sub		$tmp286 $const11 $tmp284 	%line{67} %argrw{"wrr"}
	add		$tmp287 $const11 $tmp284 	%argrw{"wrr"}
	div		___364_eta_min $tmp286 $tmp287 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:68
#     float sqrt_f0 = sqrt(f0);
	sqrt		___364_sqrt_f0 $tmp284 	%line{68} %argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:69
#     float eta_max = (1.0 + sqrt_f0) / (1.0 - sqrt_f0);
	add		$tmp288 $const11 ___364_sqrt_f0 	%line{69} %argrw{"wrr"}
	sub		$tmp289 $const11 ___364_sqrt_f0 	%argrw{"wrr"}
	div		___364_eta_max $tmp288 $tmp289 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:71
#     return mix(eta_max, eta_min, f90);
	mix		$tmp283 ___364_eta_max ___364_eta_min $tmp285 	%line{71} %argrw{"wrrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:83
#                  get_eta(f0[1], f90[1]),
	compref		$tmp291 in_face_tint $const3 	%line{83} %argrw{"wrr"}
	compref		$tmp292 in_edge_tint $const3 	%argrw{"wrr"}
	functioncall	$const34 476 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:67
#     float eta_min = (1.0 - f0) / (1.0 + f0);
	sub		$tmp293 $const11 $tmp291 	%line{67} %argrw{"wrr"}
	add		$tmp294 $const11 $tmp291 	%argrw{"wrr"}
	div		___364_eta_min $tmp293 $tmp294 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:68
#     float sqrt_f0 = sqrt(f0);
	sqrt		___364_sqrt_f0 $tmp291 	%line{68} %argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:69
#     float eta_max = (1.0 + sqrt_f0) / (1.0 - sqrt_f0);
	add		$tmp295 $const11 ___364_sqrt_f0 	%line{69} %argrw{"wrr"}
	sub		$tmp296 $const11 ___364_sqrt_f0 	%argrw{"wrr"}
	div		___364_eta_max $tmp295 $tmp296 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:71
#     return mix(eta_max, eta_min, f90);
	mix		$tmp290 ___364_eta_max ___364_eta_min $tmp292 	%line{71} %argrw{"wrrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:84
#                  get_eta(f0[2], f90[2]));
	compref		$tmp298 in_face_tint $const4 	%line{84} %argrw{"wrr"}
	compref		$tmp299 in_edge_tint $const4 	%argrw{"wrr"}
	functioncall	$const34 487 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:67
#     float eta_min = (1.0 - f0) / (1.0 + f0);
	sub		$tmp300 $const11 $tmp298 	%line{67} %argrw{"wrr"}
	add		$tmp301 $const11 $tmp298 	%argrw{"wrr"}
	div		___364_eta_min $tmp300 $tmp301 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:68
#     float sqrt_f0 = sqrt(f0);
	sqrt		___364_sqrt_f0 $tmp298 	%line{68} %argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:69
#     float eta_max = (1.0 + sqrt_f0) / (1.0 - sqrt_f0);
	add		$tmp302 $const11 ___364_sqrt_f0 	%line{69} %argrw{"wrr"}
	sub		$tmp303 $const11 ___364_sqrt_f0 	%argrw{"wrr"}
	div		___364_eta_max $tmp302 $tmp303 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:71
#     return mix(eta_max, eta_min, f90);
	mix		$tmp297 ___364_eta_max ___364_eta_min $tmp299 	%line{71} %argrw{"wrrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:84
#                  get_eta(f0[2], f90[2]));
	color		___392_n $tmp283 $tmp290 $tmp297 	%line{84} %argrw{"wrrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:762
#         {
	functioncall	$const35 532 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{762} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:89
#     return color(get_kappa(f0[0], eta[0]),
	compref		$tmp305 in_face_tint $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{89} %argrw{"wrr"}
	compref		$tmp306 ___392_n $const2 	%argrw{"wrr"}
	functioncall	$const35 503 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#     float nr = f0 * sqr(eta + 1.0) - sqr(eta - 1.0);
	add		$tmp308 $tmp306 $const11 	%line{76} %argrw{"wrr"}
	functioncall	$const20 495 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp307 $tmp308 $tmp308 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	mul		$tmp309 $tmp305 $tmp307 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
	sub		$tmp311 $tmp306 $const11 	%argrw{"wrr"}
	functioncall	$const20 499 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp310 $tmp311 $tmp311 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	sub		___365_nr $tmp309 $tmp310 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:77
# 
	sub		$tmp312 $const11 $tmp305 	%line{77} %argrw{"wrr"}
	div		$tmp313 ___365_nr $tmp312 	%argrw{"wrr"}
	sqrt		$tmp304 $tmp313 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:90
#     return (sqrt_f0 + 1) / (1 - sqrt_f0);
	compref		$tmp315 in_face_tint $const3 	%line{90} %argrw{"wrr"}
	compref		$tmp316 ___392_n $const3 	%argrw{"wrr"}
	functioncall	$const35 517 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#     float nr = f0 * sqr(eta + 1.0) - sqr(eta - 1.0);
	add		$tmp318 $tmp316 $const11 	%line{76} %argrw{"wrr"}
	functioncall	$const20 509 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp317 $tmp318 $tmp318 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	mul		$tmp319 $tmp315 $tmp317 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
	sub		$tmp321 $tmp316 $const11 	%argrw{"wrr"}
	functioncall	$const20 513 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp320 $tmp321 $tmp321 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	sub		___365_nr $tmp319 $tmp320 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:77
# 
	sub		$tmp322 $const11 $tmp315 	%line{77} %argrw{"wrr"}
	div		$tmp323 ___365_nr $tmp322 	%argrw{"wrr"}
	sqrt		$tmp314 $tmp323 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:91
# }
	compref		$tmp325 in_face_tint $const4 	%line{91} %argrw{"wrr"}
	compref		$tmp326 ___392_n $const4 	%argrw{"wrr"}
	functioncall	$const35 531 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#     float nr = f0 * sqr(eta + 1.0) - sqr(eta - 1.0);
	add		$tmp328 $tmp326 $const11 	%line{76} %argrw{"wrr"}
	functioncall	$const20 523 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp327 $tmp328 $tmp328 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	mul		$tmp329 $tmp325 $tmp327 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
	sub		$tmp331 $tmp326 $const11 	%argrw{"wrr"}
	functioncall	$const20 527 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp330 $tmp331 $tmp331 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:76
#         getattribute("path:ray_depth", ray_depth);
	sub		___365_nr $tmp329 $tmp330 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{76} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:77
# 
	sub		$tmp332 $const11 $tmp325 	%line{77} %argrw{"wrr"}
	div		$tmp333 ___365_nr $tmp332 	%argrw{"wrr"}
	sqrt		$tmp324 $tmp333 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:91
# }
	color		___392_k $tmp304 $tmp314 $tmp324 	%line{91} %argrw{"wrrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:764
#         }
	for		$tmp334 534 535 576 577 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{764} %argrw{"r"}
	assign		___393_i $const2 	%argrw{"wr"}
	lt		$tmp334 ___393_i $const36 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:768
#         if (in_fresnel_type == 0)
	compref		$tmp336 ___392_n ___393_i 	%line{768} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:769
#         {
	compref		$tmp337 ___392_k ___393_i 	%line{769} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:770
#             color refraction_color = in_refraction_amount * in_refraction_tint;
	functioncall	$const37 575 	%line{770} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:151
#     float eta = etat / etai;
	div		___372_eta $tmp336 ___392_exterior_n 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{151} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:152
#     float etak = k / etai;
	div		___372_etak $tmp337 ___392_exterior_n 	%line{152} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:154
#     float costheta_i2 = sqr(costhetai);
	functioncall	$const20 542 	%line{154} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		___372_costheta_i2 ___390_costheta_o ___390_costheta_o 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:155
# 
	sub		___372_sintheta_i2 $const11 ___372_costheta_i2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{155} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:156
#     float sintheta_i = sqrt(max(0.0, 1.0 - sqr(costheta_i)));
	functioncall	$const20 545 	%line{156} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		___372_eta2 ___372_eta ___372_eta 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:157
#     float sintheta_t = eta_i / eta_t * sintheta_i;
	functioncall	$const20 547 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{157} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		___372_etak2 ___372_etak ___372_etak 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:159
#     if (sintheta_t >= 1.0)
	sub		$tmp338 ___372_eta2 ___372_etak2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{159} %argrw{"wrr"}
	sub		___372_t0 $tmp338 ___372_sintheta_i2 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:161
#         return 1.0; // TIR
	functioncall	$const20 551 	%line{161} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp339 ___372_t0 ___372_t0 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:161
#         return 1.0; // TIR
	mul		$tmp340 $const38 ___372_eta2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{161} %argrw{"wrr"}
	mul		$tmp341 $tmp340 ___372_etak2 	%argrw{"wrr"}
	add		$tmp342 $tmp339 $tmp341 	%argrw{"wrr"}
	sqrt		___372_a2b2sum $tmp342 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:163
# 
	add		___372_t1 ___372_a2b2sum ___372_costheta_i2 	%line{163} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:165
# 
	add		$tmp343 ___372_a2b2sum ___372_t0 	%line{165} %argrw{"wrr"}
	mul		$tmp344 $const17 $tmp343 	%argrw{"wrr"}
	sqrt		___372_sqrt_a $tmp344 	%argrw{"wr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:167
#     float eta_t_costheta_t = eta_t * costheta_t;
	mul		$tmp345 $const28 ___390_costheta_o 	%line{167} %argrw{"wrr"}
	mul		___372_t2 $tmp345 ___372_sqrt_a 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:169
#     float eta_i_costheta_t = eta_i * costheta_t;
	sub		$tmp346 ___372_t1 ___372_t2 	%line{169} %argrw{"wrr"}
	add		$tmp347 ___372_t1 ___372_t2 	%argrw{"wrr"}
	div		___372_Rs $tmp346 $tmp347 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:171
#     float Rs = (eta_t_costheta_i - eta_i_costheta_t) /
	mul		$tmp348 ___372_a2b2sum ___372_costheta_i2 	%line{171} %argrw{"wrr"}
	functioncall	$const20 567 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h:35
# float sqr(float x) { return x * x; }
	mul		$tmp349 ___372_sintheta_i2 ___372_sintheta_i2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\math\\as_math_helpers.h"} %line{35} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:171
#     float Rs = (eta_t_costheta_i - eta_i_costheta_t) /
	add		___372_t3 $tmp348 $tmp349 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h"} %line{171} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:172
#                (eta_t_costheta_i + eta_i_costheta_t);
	mul		___372_t4 ___372_t2 ___372_sintheta_i2 	%line{172} %argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:174
#     float Rp = (eta_i_costheta_i - eta_t_costheta_t) /
	sub		$tmp350 ___372_t3 ___372_t4 	%line{174} %argrw{"wrr"}
	mul		$tmp351 ___372_Rs $tmp350 	%argrw{"wrr"}
	add		$tmp352 ___372_t3 ___372_t4 	%argrw{"wrr"}
	div		___372_Rp $tmp351 $tmp352 	%argrw{"wrr"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\src\\appleseed.shaders\\include\\appleseed\\material\\as_material_helpers.h:176
# 
	add		$tmp353 ___372_Rp ___372_Rs 	%line{176} %argrw{"wrr"}
	mul		$tmp335 $const17 $tmp353 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:766
#         }
	compassign	___392_Kr ___393_i $tmp335 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{766} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:764
#                 for (int i = 0; i < 3; ++i)
	add		___393_i ___393_i $const3 	%line{764} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:772
#                 substrate_transmittance = 1.0 - clamp(Kr, 0.0, 1.0);
	assign		$tmp355 $const5 	%line{772} %argrw{"wr"}
	assign		$tmp356 $const11 	%argrw{"wr"}
	functioncall	$const22 582 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp357 ___392_Kr $tmp356 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		$tmp354 $tmp357 $tmp355 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:772
# 
	sub		substrate_transmittance $const11 $tmp354 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{772} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:777
#     int compute_bssrdf = (
	mul		transmittance coating_transmittance substrate_transmittance 	%line{777} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:779
#         compute_transparency || compute_translucency || compute_transmission ||
	functioncall	$const1 590 	%line{779} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp359 transmittance $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp361 transmittance $const3 	%argrw{"wrr"}
	compref		$tmp362 transmittance $const4 	%argrw{"wrr"}
	max		$tmp360 $tmp361 $tmp362 	%argrw{"wrr"}
	max		$tmp358 $tmp359 $tmp360 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:779
#                     "std",
	le		$tmp363 $tmp358 $const26 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{779} %argrw{"wrr"}
	if		$tmp363 593 593 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:781
#                     tangent,
	exit	%line{781}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:784
#                     in_specular_roughness,
	raytype		$tmp364 $const39 	%line{784} %argrw{"wr"}
	neq		$tmp365 $tmp364 $const2 	%argrw{"wrr"}
	if		$tmp365 598 598 	%argrw{"r"}
	neq		$tmp366 compute_edf $const2 	%argrw{"wrr"}
	assign		$tmp365 $tmp366 	%argrw{"wr"}
	if		$tmp365 627 627 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:788
# 
	eq		$tmp367 in_incandescence_type $const2 	%line{788} %argrw{"wrr"}
	if		$tmp367 602 609 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:790
#         // transmission amount (and absorption), but lacking that, use viewer.
	mul		___396_edf_color in_incandescence_amount in_incandescence_color 	%line{790} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:798
#             {
	assign		$tmp369 in_temperature 	%line{798} %argrw{"wr"}
	blackbody	$tmp368 $tmp369 	%argrw{"wr"}
	mul		___396_edf_color in_incandescence_amount $tmp368 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:800
#                 float Kr = R0 + (1.0 - R0) * pow(1.0 - costheta_o, 5.0);
	if		in_tonemap_edf 609 609 	%line{800} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:802
#                 substrate_transmittance = 1.0 - clamp(Kr, 0.0, 1.0);
	luminance	$tmp370 ___396_edf_color 	%line{802} %argrw{"wr"}
	add		$tmp371 $tmp370 $const11 	%argrw{"wrr"}
	div		___396_edf_color ___396_edf_color $tmp371 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:806
#                 float exterior_n = compute_coating ? in_coating_ior : 1.0;
	mul		___396_edf_color ___396_edf_color transmittance 	%line{806} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:808
#                 color Kr = color(0);
	functioncall	$const1 616 	%line{808} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp373 ___396_edf_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp375 ___396_edf_color $const3 	%argrw{"wrr"}
	compref		$tmp376 ___396_edf_color $const4 	%argrw{"wrr"}
	max		$tmp374 $tmp375 $tmp376 	%argrw{"wrr"}
	max		$tmp372 $tmp373 $tmp374 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:808
#                 color Kr = color(0);
	gt		$tmp377 $tmp372 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{808} %argrw{"wrr"}
	if		$tmp377 627 627 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:812
# 
	if		in_area_normalize_edf 621 622 	%line{812} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:811
#                 ? 1.0 / surfacearea()
	surfacearea	$tmp378 	%line{811} %argrw{"w"}
	div		___400_normalization $const11 $tmp378 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:812
#                 : 1.0;
	assign		___400_normalization $const11 	%line{812} %argrw{"wr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:814
#             ClosureOut += emission() * normalization * opacity * edf_color;
	closure		$tmp379 $const40 	%line{814} %argrw{"wr"}
	mul		$tmp380 $tmp379 ___400_normalization 	%argrw{"wrr"}
	mul		$tmp381 $tmp380 opacity 	%argrw{"wrr"}
	mul		$tmp382 $tmp381 ___396_edf_color 	%argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp382 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:818
#     if (compute_bssrdf)
	if		compute_bssrdf 647 675 	%line{818} %argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:820
#         color albedo = in_diffuse_weight * in_color;
	mul		___401_albedo in_diffuse_weight in_color 	%line{820} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:822
#         if (max(albedo) > 0.0)
	functioncall	$const1 635 	%line{822} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp384 ___401_albedo $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp386 ___401_albedo $const3 	%argrw{"wrr"}
	compref		$tmp387 ___401_albedo $const4 	%argrw{"wrr"}
	max		$tmp385 $tmp386 $tmp387 	%argrw{"wrr"}
	max		$tmp383 $tmp384 $tmp385 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:822
#             }
	gt		$tmp388 $tmp383 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{822} %argrw{"wrr"}
	if		$tmp388 647 647 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:824
#     }
	assign		$tmp389 $const41 	%line{824} %argrw{"wr"}
	assign		$tmp390 $const25 	%argrw{"wr"}
	functioncall	$const22 642 	%argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp391 ___401_albedo $tmp390 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___401_albedo $tmp391 $tmp389 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:833
#             if (max(refraction_color) > 0.0)
	mul		$tmp393 in_diffuse_weight in_color 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{833} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:834
# #else
	mul		$tmp394 in_sss_mfp_scale in_sss_mfp 	%line{834} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:836
#                 max(refraction_color) > 0.0)
	closure		$tmp392 $const44 $const42 Nn $tmp393 $tmp394 in_ior $const43 $const5 	%line{836} %argrw{"wrrrrrrrr"}
	mul		$tmp395 $tmp392 in_subsurface_weight 	%argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp395 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:841
#                     Nn,
	mul		___403_diffuse_color in_diffuse_weight in_color 	%line{841} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:843
# #ifdef DEBUG
	functioncall	$const1 654 	%line{843} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp397 ___403_diffuse_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp399 ___403_diffuse_color $const3 	%argrw{"wrr"}
	compref		$tmp400 ___403_diffuse_color $const4 	%argrw{"wrr"}
	max		$tmp398 $tmp399 $tmp400 	%argrw{"wrr"}
	max		$tmp396 $tmp397 $tmp398 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:843
#             // Blackbody depends on RGBW primaries (SPD->XYZ->RGB), and 
	gt		$tmp401 $tmp396 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{843} %argrw{"wrr"}
	if		$tmp401 661 661 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:846
#             edf_color =
	closure		$tmp402 $const45 Nn in_diffuse_roughness 	%line{846} %argrw{"wrrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:845
#             ClosureOut += transmittance * opacity *
	mul		$tmp403 transmittance opacity 	%line{845} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:846
#                 diffuse_color * oren_nayar(Nn, in_diffuse_roughness);
	mul		$tmp404 $tmp403 ___403_diffuse_color 	%line{846} %argrw{"wrr"}
	mul		$tmp405 $tmp402 $tmp404 	%argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp405 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:850
#             in_translucency_color;
	mul		___403_translucency_color in_translucency_weight in_translucency_color 	%line{850} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:852
#         if (max(translucency_color) > 0.0)
	functioncall	$const1 668 	%line{852} %argrw{"r"}
# M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h:49
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp407 ___403_translucency_color $const2 	%filename{"M:/gafferDependencies\\appleseed-1.8.1-beta\\sandbox\\shaders\\as_osl_extensions.h"} %line{49} %argrw{"wrr"}
	compref		$tmp409 ___403_translucency_color $const3 	%argrw{"wrr"}
	compref		$tmp410 ___403_translucency_color $const4 	%argrw{"wrr"}
	max		$tmp408 $tmp409 $tmp410 	%argrw{"wrr"}
	max		$tmp406 $tmp407 $tmp408 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:852
#             }
	gt		$tmp411 $tmp406 $const5 	%filename{"M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl"} %line{852} %argrw{"wrr"}
	if		$tmp411 675 675 	%argrw{"r"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:855
#         edf_color *= transmittance;
	closure		$tmp412 $const46 Nn 	%line{855} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:854
#             ClosureOut += transmittance * opacity *
	mul		$tmp413 transmittance opacity 	%line{854} %argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:855
#                 translucency_color * translucent(Nn);
	mul		$tmp414 $tmp413 ___403_translucency_color 	%line{855} %argrw{"wrr"}
	mul		$tmp415 $tmp412 $tmp414 	%argrw{"wrr"}
	add		ClosureOut ClosureOut $tmp415 	%argrw{"wrr"}
# M:/gafferDependencies/appleseed-1.8.1-beta/src/appleseed.shaders/src/max/as_max_standard_material.osl:858
#     Ci = ClosureOut;
	assign		Ci ClosureOut 	%line{858} %argrw{"wr"}
	end
