/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \class Q3SqlRecordInfo
    \brief The Q3SqlRecordInfo class encapsulates a set of database field meta data.

    \compat

    This class is a list that holds a set of database field meta
    data. Use contains() to see if a given field name exists in the
    record, and use find() to get a QSqlFieldInfo record for a named
    field.

    \sa Q3SqlFieldInfo
*/

/*!
    \fn Q3SqlRecordInfo::Q3SqlRecordInfo()

    Constructs an empty record info object.
*/

/*!
    \fn Q3SqlRecordInfo::Q3SqlRecordInfo(const Q3SqlFieldInfoList& other)
    \fn Q3SqlRecordInfo::Q3SqlRecordInfo(const QSqlRecord& other)

    Constructs a copy of \a other.
*/

/*!
    \fn size_type Q3SqlRecordInfo::contains(const QString& fieldName) const

    Returns the number of times a field called \a fieldName occurs in
    the record. Returns 0 if no field by that name could be found.
*/

/*!
    \fn Q3SqlFieldInfo Q3SqlRecordInfo::find(const QString& fieldName) const

    Returns a QSqlFieldInfo object for the first field in the record
    which has the field name \a fieldName. If no matching field is
    found then an empty QSqlFieldInfo object is returned.
*/

/*!
    \fn QSqlRecord Q3SqlRecordInfo::toRecord() const

    Returns an empty QSqlRecord based on the field information
    in this Q3SqlRecordInfo.
*/
