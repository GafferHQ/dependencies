/*
 * THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT EDIT.
 *
 * This file was generated by the dom/make_names.pl script.
 *
 * Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "config.h"
#ifdef SKIP_STATIC_CONSTRUCTORS_ON_GCC
#define DOM_XLinkNAMES_HIDE_GLOBALS 1
#else
#define QNAME_DEFAULT_CONSTRUCTOR 1
#endif

#include "XLinkNames.h"

#include <wtf/StaticConstructors.h>
namespace WebCore {

 namespace XLinkNames {

using namespace WebCore;

DEFINE_GLOBAL(AtomicString, xlinkNamespaceURI, "http://www.w3.org/1999/xlink")

// Attributes
DEFINE_GLOBAL(QualifiedName, actuateAttr, nullAtom, "actuate", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, arcroleAttr, nullAtom, "arcrole", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, hrefAttr, nullAtom, "href", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, roleAttr, nullAtom, "role", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, showAttr, nullAtom, "show", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, titleAttr, nullAtom, "title", xlinkNamespaceURI);
DEFINE_GLOBAL(QualifiedName, typeAttr, nullAtom, "type", xlinkNamespaceURI);


WebCore::QualifiedName** getXLinkAttrs(size_t* size)
{
    static WebCore::QualifiedName* XLinkAttr[] = {
        (WebCore::QualifiedName*)&actuateAttr,
        (WebCore::QualifiedName*)&arcroleAttr,
        (WebCore::QualifiedName*)&hrefAttr,
        (WebCore::QualifiedName*)&roleAttr,
        (WebCore::QualifiedName*)&showAttr,
        (WebCore::QualifiedName*)&titleAttr,
        (WebCore::QualifiedName*)&typeAttr,
    };
    *size = 7;
    return XLinkAttr;
}

void init()
{
    static bool initialized = false;
    if (initialized)
        return;
    initialized = true;
    
    // Use placement new to initialize the globals.
    
    AtomicString::init();
    AtomicString xlinkNS("http://www.w3.org/1999/xlink");

    // Namespace
    new ((void*)&xlinkNamespaceURI) AtomicString(xlinkNS);

    // Attributes
    new ((void*)&actuateAttr) QualifiedName(nullAtom, "actuate", xlinkNS);
    new ((void*)&arcroleAttr) QualifiedName(nullAtom, "arcrole", xlinkNS);
    new ((void*)&hrefAttr) QualifiedName(nullAtom, "href", xlinkNS);
    new ((void*)&roleAttr) QualifiedName(nullAtom, "role", xlinkNS);
    new ((void*)&showAttr) QualifiedName(nullAtom, "show", xlinkNS);
    new ((void*)&titleAttr) QualifiedName(nullAtom, "title", xlinkNS);
    new ((void*)&typeAttr) QualifiedName(nullAtom, "type", xlinkNS);
}

} }

