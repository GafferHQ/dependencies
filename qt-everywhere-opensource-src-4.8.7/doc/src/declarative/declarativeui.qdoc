/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\title Qt Quick
\page qtquick.html
\ingroup qt-gui-concepts

\brief Qt Quick provides a declarative framework for building highly
dynamic user interfaces.

Qt Quick is a collection of technologies that are designed to help
developers create the kind of intuitive, modern, fluid user
interfaces that are increasingly used on mobile phones, media players,
set-top boxes and other portable devices.

Qt Quick consists of a rich set of user interface elements, a declarative
language for describing user interfaces and a language runtime. A collection
of C++ APIs is used to integrate these high level features with classic
Qt applications.

\section1 Getting Started

\list
\o \l{Introduction to Qt Quick}
\o \l{QML for Qt Programmers}{QML Programming for Qt Programmers}
\o \l{Getting Started Programming with QML}

\o \l{What's new in Qt Quick}{What's New in the Qt Quick Release}
\o \l{QML Examples and Demos}
\endlist

\section1 QML Features

\list
\o \l{QML Basic Elements}{Basic Elements}
\o \l{QML Basic Types}{Data Types}
\o \l{Property Binding}
\o \l{Using QML Positioner and Repeater Items}{Component Layouts}
\o \l{Anchor-based Layout in QML}{Layouts using Anchors}
\o \l{QML Mouse Events}{Mouse Events}
\o \l{QML Text Handling and Validators}{Text Handling and Validators}
\o \l{Keyboard Focus in QML}{Keyboard Focus}
\o \l{QML Signal and Handler Event System}{Signal and Handler Event System}
\o \l{Importing Reusable Components}
\o \l{QML States}{States}
\o \l{QML Animation and Transitions}{Animation and Transitions}
\o \l{QML Data Models}{Structuring Data with Models}
\o \l{Presenting Data with Views}
\o \l{Extending QML Functionalities using C++}
\o \l{Using QML Bindings in C++ Applications}
\o \l{Integrating QML Code with Existing Qt UI Code}
\o \l{Dynamic Object Management in QML}{Dynamic Object Management}
\o \l{Network Transparency}{Loading Resources in QML}
\o \l{QML Internationalization}{Internationalization}
\endlist

\section1 QML Add-Ons

\list
\o \l{Qt Quick Components for Symbian 1.1}{Qt Quick Components for Symbian} - a native component set for the Symbian^3 platform
\o \l{QtWebKit QML Module}
\o \l{http://doc.qt.digia.com/qtmobility-1.1.0/qml-plugins.html}{Mobility QML Plugins}
\o \l {http://doc.qt.digia.com/qt-components-symbian-1.0/index.html}{Qt Quick Components}
\endlist

\section1 Qt Quick Tools

\list
\o \l{Debugging QML}
\o \l{external: Developing Qt Quick Applications with Creator}{Developing with Qt Creator}
\o \l{QML Viewer}
\endlist

\section1 Reference

\list
\o \l{Introduction to the QML language}{QML Syntax}
\o \l{QML Elements}
\o \l{Qt Declarative Module}
\o \l{QML Basic Types}{QML Data Types}
\o \l{QML Coding Conventions}
\o \l{external: Qt Creator Manual}{Qt Creator Manual}
\o \l{Programming with Qt}
\o \l{http://doc.qt.digia.com/qtmobility-1.1.0/index.html}{Qt Mobility Documentation}
\endlist

\section1 Architecture

\list
\o \l{Qt Declarative UI Runtime}
\o \l{Integrating JavaScript}
\o \l{QML Scope}
\o \l{QML Modules}
\o \l{QML Documents}
\o \l{QML Global Object}
\o \l{QML Internationalization}
\o \l{QML Right-to-left User Interfaces}
\o \l{QML Security}
\o \l{Qt Declarative Module}
\endlist

\section1 Examples

\list
\o \l{QML Tutorial}{"Hello World" Tutorial}
\o \l{Getting Started Programming with QML}
\o \l{QML Advanced Tutorial}{Tutorial: "Same Game"}
\o \l{Tutorial: Writing QML extensions with C++}
\o \l{QML Examples and Demos}

\o Forum Nokia:
\l{http://wiki.forum.nokia.com/index.php/Qt_Quick_examples_for_porting}{Qt Quick
examples for porting}
\endlist

\section1 Best Practices

\list
\o \l{QML Best Practices: Coding Conventions}{Coding Tips}
\o \l{QML Performance}{Performance Tips}
\endlist

\section1 License Information
\list
\o \l{Qt Quick Licensing Information}
\endlist

\section1 Online Examples

\list
\o Forum Nokia:
\l{http://wiki.forum.nokia.com/index.php/Qt_Quick_examples_for_porting}{Qt Quick
examples for porting}
\endlist
*/
