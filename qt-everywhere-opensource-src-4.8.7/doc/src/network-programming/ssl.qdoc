/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page ssl.html
    \title Secure Sockets Layer (SSL) Classes
    \brief Classes for secure communication over network sockets.
    \ingroup qt-network

    \keyword SSL

    The classes below provide support for secure network communication using
    the Secure Sockets Layer (SSL) protocol, using the \l{OpenSSL Toolkit} to
    perform encryption and protocol handling.

    See the \l{General Qt Requirements} page for information about the
    versions of OpenSSL that are known to work with Qt.

    \section1 Enabling and Disabling SSL Support

    When building Qt from source, the configuration system checks for the presence
    of the \c{openssl/opensslv.h} header provided by source or developer packages
    of OpenSSL.

    By default, an SSL-enabled Qt library dynamically loads any installed OpenSSL
    library at run-time. However, it is possible to link against the library at
    compile-time by configuring Qt with the \c{-openssl-linked} option.

    When building a version of Qt linked against OpenSSL, the build system will
    attempt to link with libssl and libcrypt libraries located in the default
    location on the developer's system. This location is configurable:
    set the \c OPENSSL_LIBS environment variable to contain the linker options
    required to link Qt against the installed library. For example, on a Unix/Linux
    system:

    \code
        OPENSSL_LIBS='-L/opt/ssl/lib -lssl -lcrypto' ./configure -openssl-linked 
    \endcode

    To disable SSL support in a Qt build, configure Qt with the \c{-no-openssl}
    option.

    \section1 Licensing Information

    \note Due to import and export restrictions in some parts of the world, we
    are unable to supply the OpenSSL Toolkit with Qt packages. Developers wishing
    to use SSL communication in their deployed applications should either ensure
    that their users have the appropriate libraries installed, or they should
    consult a suitably qualified legal professional to ensure that applications
    using code from the OpenSSL project are correctly certified for import
    and export in relevant regions of the world.

    When the QtNetwork module is built with SSL support, the library is linked
    against OpenSSL in a way that requires OpenSSL license compliance.
*/
