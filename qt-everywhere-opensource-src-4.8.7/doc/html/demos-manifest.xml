<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="Qt">
    <demos>
        <demo name="40000 Chips" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-chip.html" projectPath="chip/chip.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/chip-demo.png">
            <description><![CDATA[The 40000 Chips demo shows how to visualize a huge scene with 40000 chip items using Graphics View. It also shows Graphics View's powerful navigation and interaction features, allowing you to zoom and rotate each of four views independently, and you can select and move items around the scene.]]></description>
            <tags>chips</tags>
            <fileToOpen>chip/chip.cpp</fileToOpen>
            <fileToOpen>chip/chip.h</fileToOpen>
            <fileToOpen>chip/main.cpp</fileToOpen>
        </demo>
        <demo name="Affine Transformations" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-affine.html" projectPath="affine/affine.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/affine-demo.png">
            <description><![CDATA[The Affine Transformations demo shows Qt's ability to perform affine transformations on painting operations.]]></description>
            <tags>affine,transformations</tags>
            <fileToOpen>affine/main.cpp</fileToOpen>
        </demo>
        <demo name="Anomaly Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-anomaly.html" projectPath="embedded/anomaly/anomaly.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/anomaly-demo.png">
            <description><![CDATA[The anomaly demo shows a QtWebKit browser for mobile devices.]]></description>
            <tags>anomaly,demonstration</tags>
            <fileToOpen>embedded/anomaly/src/Main.cpp</fileToOpen>
        </demo>
        <demo name="Arthur Plugin" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-arthurplugin.html" projectPath="arthurplugin/arthurplugin.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/arthurplugin-demo.png">
            <description><![CDATA[The Arthur Plugin demo demonstrates the abilities of Qt's painting system in combination with Qt Designer's custom widget plugin facilities.]]></description>
            <tags>arthur,plugin</tags>
        </demo>
        <demo name="Books Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-books.html" projectPath="books/books.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/books-demo.png">
            <description><![CDATA[The Books demonstration shows how Qt's SQL classes can be used with the model/view framework to create rich user interfaces for information stored in a database.]]></description>
            <tags>books,demonstration</tags>
            <fileToOpen>books/main.cpp</fileToOpen>
        </demo>
        <demo name="Boxes" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-boxes.html" projectPath="boxes/boxes.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/boxes-demo.png">
            <description><![CDATA[The Boxes demo shows Qt's ability to combine advanced OpenGL rendering with the Graphics View Framework.]]></description>
            <tags>boxes</tags>
            <fileToOpen>boxes/main.cpp</fileToOpen>
        </demo>
        <demo name="Calculator" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-calculator.html" projectPath="declarative/calculator/calculator.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-calculator-example.png">
            <description><![CDATA[The Qt Quick Calculator demo shows how to write a simple calculator application in QML and JavaScript.]]></description>
            <tags>calculator</tags>
            <fileToOpen>declarative/calculator/qml/calculator/calculator.qml</fileToOpen>
            <fileToOpen>declarative/calculator/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Composition Modes" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-composition.html" projectPath="composition/composition.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/composition-demo.png">
            <description><![CDATA[The Composition Modes demo shows some of the more advanced composition modes supported by Qt.]]></description>
            <tags>composition,modes</tags>
            <fileToOpen>composition/composition.cpp</fileToOpen>
            <fileToOpen>composition/composition.h</fileToOpen>
            <fileToOpen>composition/main.cpp</fileToOpen>
        </demo>
        <demo name="Embedded Desktop Services Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-desktopservices.html" projectPath="embedded/desktopservices/desktopservices.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/embeddeddesktopservices-demo.png">
            <description><![CDATA[The Embedded Desktop Services demo shows the Qt Desktop Services API.]]></description>
            <tags>embedded,desktop,services,demonstration</tags>
            <fileToOpen>embedded/desktopservices/main.cpp</fileToOpen>
        </demo>
        <demo name="Embedded Dialogs" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embeddeddialogs.html" projectPath="embeddeddialogs/embeddeddialogs.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/embeddeddialogs-demo.png">
            <description><![CDATA[The Embedded Dialogs demo shows how to embed standard dialogs into Graphics View. It also shows how you can customize the proxy class and add window shadows.]]></description>
            <tags>embedded,dialogs</tags>
            <fileToOpen>embeddeddialogs/main.cpp</fileToOpen>
        </demo>
        <demo name="Embedded SVG Viewer Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-embeddedsvgviewer.html" projectPath="embedded/embeddedsvgviewer/embeddedsvgviewer.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/embeddedsvgviewer-demo.png">
            <description><![CDATA[The Embedded SVG Viewer demo shows Graphics View SVG rendering in an embedded context.]]></description>
            <tags>embedded,svg,viewer,demonstration</tags>
            <fileToOpen>embedded/embeddedsvgviewer/embeddedsvgviewer.cpp</fileToOpen>
            <fileToOpen>embedded/embeddedsvgviewer/embeddedsvgviewer.h</fileToOpen>
            <fileToOpen>embedded/embeddedsvgviewer/main.cpp</fileToOpen>
        </demo>
        <demo name="Embedded Styles Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-styledemo.html" projectPath="embedded/styledemo/styledemo.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/styledemo-demo.png">
            <description><![CDATA[The Embedded Styles demo shows how to use Qt Style APIs in embedded contexts]]></description>
            <tags>embedded,styles,demonstration</tags>
            <fileToOpen>embedded/styledemo/main.cpp</fileToOpen>
        </demo>
        <demo name="Flickable List Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-flickable.html" projectPath="embedded/flickable/flickable.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/flickable-demo.png">
            <description><![CDATA[The Flickable List demo shows a flickable list in an embedded context.]]></description>
            <tags>flickable,list,demonstration</tags>
            <fileToOpen>embedded/flickable/flickable.cpp</fileToOpen>
            <fileToOpen>embedded/flickable/flickable.h</fileToOpen>
            <fileToOpen>embedded/flickable/main.cpp</fileToOpen>
        </demo>
        <demo name="Flickr Mobile" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-flickr.html" projectPath="declarative/flickr/flickr.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-flickr-demo.png">
            <description><![CDATA[The Qt Quick Flickr Mobile demo shows how to write a mobile Flickr browser application in QML.]]></description>
            <tags>flickr,mobile</tags>
            <fileToOpen>declarative/flickr/qml/flickr/flickr.qml</fileToOpen>
            <fileToOpen>declarative/flickr/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Flight Info Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-flightinfo.html" projectPath="embedded/flightinfo/flightinfo.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/flightinfo-demo.png">
            <description><![CDATA[The Flight Info demo shows requesting data from an external server in a mbile device context.]]></description>
            <tags>flight,info,demonstration</tags>
            <fileToOpen>embedded/flightinfo/flightinfo.cpp</fileToOpen>
        </demo>
        <demo name="Fluid Launcher Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-fluidlauncher.html" projectPath="embedded/fluidlauncher/fluidlauncher.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/fluidlauncher-demo.png">
            <description><![CDATA[The Fluid Launcher demo demonstrates an application launcher for mobile devices]]></description>
            <tags>fluid,launcher,demonstration</tags>
            <fileToOpen>embedded/fluidlauncher/fluidlauncher.cpp</fileToOpen>
            <fileToOpen>embedded/fluidlauncher/fluidlauncher.h</fileToOpen>
            <fileToOpen>embedded/fluidlauncher/main.cpp</fileToOpen>
        </demo>
        <demo name="GL Hypnotizer" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-glhypnotizer.html" projectPath="glhypnotizer/glhypnotizer.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/glhypnotizer-demo.png">
            <description><![CDATA[The GL Hypnotizer demo shows how to use OpenGL from a seperate thread.]]></description>
            <tags>gl,hypnotizer</tags>
            <fileToOpen>glhypnotizer/main.cpp</fileToOpen>
        </demo>
        <demo name="Gradients" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-gradients.html" projectPath="gradients/gradients.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/gradients-demo.png">
            <description><![CDATA[The Gradients demo shows the various types of gradients that can be used in Qt.]]></description>
            <tags>gradients</tags>
            <fileToOpen>gradients/gradients.cpp</fileToOpen>
            <fileToOpen>gradients/gradients.h</fileToOpen>
            <fileToOpen>gradients/main.cpp</fileToOpen>
        </demo>
        <demo name="Guitar Tuner Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-mobile-guitartuner.html" projectPath="mobile/guitartuner/guitartuner.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-guitartuner-example.png">
            <description><![CDATA[The Guitar Tuner demo demonstrates the audio-in and audio-out interfaces of Qt Mobility Multimedia, and integrating Qt code in a Qt Quick UI.]]></description>
            <tags>guitar,tuner,demonstration</tags>
            <fileToOpen>mobile/guitartuner/src/guitartuner.cpp</fileToOpen>
            <fileToOpen>mobile/guitartuner/src/guitartuner.h</fileToOpen>
            <fileToOpen>mobile/guitartuner/src/main.cpp</fileToOpen>
        </demo>
        <demo name="Interview" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-interview.html" projectPath="interview/interview.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/interview-demo.png">
            <description><![CDATA[The Interview demonstration explores the flexibility and scalability of the model/view framework by presenting an infinitely deep data structure using a model and three different types of view.]]></description>
            <tags>interview</tags>
            <fileToOpen>interview/main.cpp</fileToOpen>
        </demo>
        <demo name="Light Maps Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-lightmaps.html" projectPath="embedded/lightmaps/lightmaps.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/lightmaps-demo.png">
            <description><![CDATA[The Light Maps demo shows graphics effects in an embedded context.]]></description>
            <tags>light,maps,demonstration</tags>
            <fileToOpen>embedded/lightmaps/lightmaps.cpp</fileToOpen>
            <fileToOpen>embedded/lightmaps/lightmaps.h</fileToOpen>
            <fileToOpen>embedded/lightmaps/main.cpp</fileToOpen>
        </demo>
        <demo name="Mac Main Window Demo" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-macmainwindow.html" projectPath="macmainwindow/macmainwindow.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/macmainwindow.png">
            <description><![CDATA[The Mac Main Window demo shows how to create a main window that has the same appearance as other Mac OS X applications such as Mail or iTunes. This includes customizing the item views and QSplitter and wrapping native widgets such as the search field.]]></description>
            <tags>mac,main,window,demo</tags>
            <fileToOpen>macmainwindow/macmainwindow.h</fileToOpen>
            <fileToOpen>macmainwindow/main.cpp</fileToOpen>
        </demo>
        <demo name="Main Window" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-mainwindow.html" projectPath="mainwindow/mainwindow.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/mainwindow-demo.png">
            <description><![CDATA[The Main Window demonstration shows Qt's extensive support for tool bars, dock windows, menus, and other standard application features.]]></description>
            <tags>main,window</tags>
            <fileToOpen>mainwindow/mainwindow.cpp</fileToOpen>
            <fileToOpen>mainwindow/mainwindow.h</fileToOpen>
            <fileToOpen>mainwindow/main.cpp</fileToOpen>
        </demo>
        <demo name="Media Player" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-qmediaplayer.html" projectPath="qmediaplayer/qmediaplayer.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qmediaplayer-demo.png">
            <description><![CDATA[The Media Player demonstration shows how Phonon can be used in Qt applications to handle audio and video playback.]]></description>
            <tags>media,player</tags>
            <fileToOpen>qmediaplayer/main.cpp</fileToOpen>
        </demo>
        <demo name="Minehunt" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-minehunt.html" projectPath="declarative/minehunt/minehunt.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-minehunt-demo.png">
            <description><![CDATA[The Qt Quick Minehunt demo shows how to create a simple Minehunt game, using QML for the UI and C++ for the game logic.]]></description>
            <tags>minehunt</tags>
            <fileToOpen>declarative/minehunt/minehunt.cpp</fileToOpen>
            <fileToOpen>declarative/minehunt/minehunt.h</fileToOpen>
            <fileToOpen>declarative/minehunt/qml/minehunt/minehunt.qml</fileToOpen>
            <fileToOpen>declarative/minehunt/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Path Stroking" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-pathstroke.html" projectPath="pathstroke/pathstroke.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/pathstroke-demo.png">
            <description><![CDATA[This Path Stroking demo shows some of the various types of pens that can be used in Qt.]]></description>
            <tags>path,stroking</tags>
            <fileToOpen>pathstroke/pathstroke.cpp</fileToOpen>
            <fileToOpen>pathstroke/pathstroke.h</fileToOpen>
            <fileToOpen>pathstroke/main.cpp</fileToOpen>
        </demo>
        <demo name="Photo Viewer" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-photoviewer.html" projectPath="declarative/photoviewer/photoviewer.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-photoviewer-demo.png">
            <description><![CDATA[The Qt Quick Photo Viewer demo shows how to write a Flickr photo viewer application in QML.]]></description>
            <tags>photo,viewer</tags>
            <fileToOpen>declarative/photoviewer/qml/photoviewer/photoviewer.qml</fileToOpen>
            <fileToOpen>declarative/photoviewer/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="QCamera Demo" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-mobile-qcamera.html" projectPath="mobile/qcamera/qcamera.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qcameraexample.png">
            <description><![CDATA[The QCamera demo shows how to use Multimedia, Messaging and Contacts modules from Qt Mobility.]]></description>
            <tags>qcamera,demo</tags>
            <fileToOpen>mobile/qcamera/main.cpp</fileToOpen>
        </demo>
        <demo name="Qt Bubble Level Demo" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-mobile-qtbubblelevel.html" projectPath="mobile/qtbubblelevel/qtbubblelevel.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-qtbubblelevel-demo.png">
            <description><![CDATA[Qt Bubble Level is a simple application that uses Qt Mobility's accelerometer APIs and hardware sensor information to calculate the inclination of the device and presents this as atraditional bubble level.]]></description>
            <tags>qt,bubble,level,demo</tags>
            <fileToOpen>mobile/qtbubblelevel/main.cpp</fileToOpen>
        </demo>
        <demo name="Qt Quick Web Browser" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-webbrowser.html" projectPath="declarative/webbrowser/webbrowser.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-webbrowser-demo.png">
            <description><![CDATA[The Qt Quick Web Browser demo shows how to write a simple web browser in QML by combining the WebView element with other components including scroll bars, Flickable views and TextInput fields.]]></description>
            <tags>qt,quick,web,browser</tags>
            <fileToOpen>declarative/webbrowser/qml/webbrowser/webbrowser.qml</fileToOpen>
            <fileToOpen>declarative/webbrowser/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="RSS News" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-rssnews.html" projectPath="declarative/rssnews/rssnews.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-rssnews-demo.png">
            <description><![CDATA[The Qt Quick RSS News demo shows how to write a RSS news reader in QML.]]></description>
            <tags>rss,news</tags>
            <fileToOpen>declarative/rssnews/qml/rssnews/rssnews.qml</fileToOpen>
            <fileToOpen>declarative/rssnews/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Ray Casting Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-raycasting.html" projectPath="embedded/raycasting/raycasting.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/raycasting-demo.png">
            <description><![CDATA[The Ray Casting demo shows how to use ray casting to build a mid-1990s style first-person game.]]></description>
            <tags>ray,casting,demonstration</tags>
            <fileToOpen>embedded/raycasting/raycasting.cpp</fileToOpen>
        </demo>
        <demo name="SQL Browser" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-sqlbrowser.html" projectPath="sqlbrowser/sqlbrowser.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/sqlbrowser-demo.png">
            <description><![CDATA[The SQL Browser demonstration shows how a data browser can be used to visualize the results of SQL statements on a live database.]]></description>
            <tags>sql,browser</tags>
            <fileToOpen>sqlbrowser/main.cpp</fileToOpen>
        </demo>
        <demo name="Same Game" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-samegame.html" projectPath="declarative/samegame/samegame.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-samegame-demo.png">
            <description><![CDATA[The Qt Quick Same Game demo shows how to write a 'Same Game' game in QML, using Javascript for all the game logic.]]></description>
            <tags>same,game</tags>
            <fileToOpen>declarative/samegame/qml/samegame/samegame.qml</fileToOpen>
            <fileToOpen>declarative/samegame/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Snake" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-snake.html" projectPath="declarative/snake/snake.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-snake-demo.png">
            <description><![CDATA[The Qt Quick Snake demo shows how to write a Snake game in QML, controlled by the keyboard as well as the mouse.]]></description>
            <tags>snake</tags>
            <fileToOpen>declarative/snake/qml/snake/snake.qml</fileToOpen>
            <fileToOpen>declarative/snake/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Spectrum Analyzer" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-spectrum.html" projectPath="spectrum/spectrum.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/spectrum-demo.png">
            <description><![CDATA[The Spectrum Analyzer demo shows how the QtMultimedia Module can be used in Qt applications to capture and then play back an audio stream.]]></description>
            <tags>spectrum,analyzer</tags>
            <fileToOpen>spectrum/app/spectrum.h</fileToOpen>
            <fileToOpen>spectrum/app/main.cpp</fileToOpen>
        </demo>
        <demo name="Spreadsheet" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-spreadsheet.html" projectPath="spreadsheet/spreadsheet.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/spreadsheet-demo.png">
            <description><![CDATA[The Spreadsheet demonstration shows how a table view can be used to create a simple spreadsheet application. Custom delegates are used to render different types of data in distinctive colors.]]></description>
            <tags>spreadsheet</tags>
            <fileToOpen>spreadsheet/spreadsheet.cpp</fileToOpen>
            <fileToOpen>spreadsheet/spreadsheet.h</fileToOpen>
            <fileToOpen>spreadsheet/main.cpp</fileToOpen>
        </demo>
        <demo name="Sub-Attaq" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-sub-attaq.html" projectPath="sub-attaq/sub-attaq.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/sub-attaq-demo.png">
            <description><![CDATA[The Sub-Attaq demo shows Qt's ability to combine the animation framework and the state machine framework to create a game.]]></description>
            <tags>sub-attaq</tags>
            <fileToOpen>sub-attaq/main.cpp</fileToOpen>
        </demo>
        <demo name="Text Edit" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-textedit.html" projectPath="textedit/textedit.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/textedit-demo.png">
            <description><![CDATA[The Text Edit demonstration shows Qt's rich text editing facilities in action, providing an example document for you to experiment with.]]></description>
            <tags>text,edit</tags>
            <fileToOpen>textedit/textedit.cpp</fileToOpen>
            <fileToOpen>textedit/textedit.h</fileToOpen>
            <fileToOpen>textedit/main.cpp</fileToOpen>
        </demo>
        <demo name="Twitter Mobile" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-declarative-twitter.html" projectPath="declarative/twitter/twitter.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/qml-twitter-demo.png">
            <description><![CDATA[The Qt Quick Twitter Mobile demo shows how to write a mobile Twitter search client in QML. Use it to see what people think about Qt Quick!]]></description>
            <tags>twitter,mobile</tags>
            <fileToOpen>declarative/twitter/qml/twitter/twitter.qml</fileToOpen>
            <fileToOpen>declarative/twitter/main.cpp</fileToOpen>
            <dependency>helper/qmlapplicationviewer</dependency>
        </demo>
        <demo name="Undo Framework" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-undo.html" projectPath="undo/undo.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/undodemo.png">
            <description><![CDATA[This demo shows Qt's undo framework in action.]]></description>
            <tags>undo,framework</tags>
            <fileToOpen>undo/main.cpp</fileToOpen>
        </demo>
        <demo name="Vector Deformation" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-deform.html" projectPath="deform/deform.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/deform-demo.png">
            <description><![CDATA[The Vector Deformation demo shows how to use advanced vector techniques to draw text using a .]]></description>
            <tags>vector,deformation</tags>
            <fileToOpen>deform/main.cpp</fileToOpen>
        </demo>
        <demo name="Weather Info Demonstration" docUrl="qthelp://com.trolltech.qt.487/qdoc/demos-embedded-weatherinfo.html" projectPath="embedded/weatherinfo/weatherinfo.pro" imageUrl="qthelp://com.trolltech.qt.487/qdoc/images/weatherinfo-demo.png">
            <description><![CDATA[The Weather Info demo shows how to use XML files to build an embedded UI.]]></description>
            <tags>weather,info,demonstration</tags>
            <fileToOpen>embedded/weatherinfo/weatherinfo.cpp</fileToOpen>
        </demo>
    </demos>
</instructionals>
