#
# qmake configuration for linux-g++-cross
#

MAKEFILE_GENERATOR	= UNIX
TEMPLATE		= app
CONFIG			+= qt warn_on release incremental link_prl
QT			+= core gui
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/g++.conf)
include(../common/linux.conf)

QMAKE_CC		= arm-none-linux-gnueabi-gcc
QMAKE_CFLAGS            += -march=armv7a -mcpu=cortex-a8 -mfpu=vfp -mfloat-abi=softfp -fno-omit-frame-pointer -fno-optimize-sibling-calls
QMAKE_CFLAGS_RELEASE	= -O3
QMAKE_CFLAGS_DEBUG	= -O0

QMAKE_CXX		= arm-none-linux-gnueabi-g++
QMAKE_CXXFLAGS		+= $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG

QMAKE_LINK		= arm-none-linux-gnueabi-g++
QMAKE_LINK_SHLIB	= arm-none-linux-gnueabi-g++
QMAKE_LINK_C		= arm-none-linux-gnueabi-gcc
QMAKE_LINK_C_SHLIB	= arm-none-linux-gnueabi-gcc
QMAKE_LFLAGS		+= -Wl,-O1 -Wl,--hash-style=gnu

QMAKE_AR                = arm-none-linux-gnueabi-ar cqs
QMAKE_OBJCOPY           = arm-none-linux-gnueabi-objcopy
QMAKE_STRIP             = arm-none-linux-gnueabi-strip

#QMAKE_INCDIR            =
#QMAKE_LIBDIR            =
QMAKE_INCDIR_X11        =
QMAKE_LIBDIR_X11        =
#QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
#QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL     =
QMAKE_LIBDIR_OPENGL     =
#QMAKE_INCDIR_EGL        = 
#QMAKE_LIBDIR_EGL        =
#QMAKE_INCDIR_OPENVG     = 
#QMAKE_LIBDIR_OPENVG     =

QMAKE_LIBS_X11          = -lXext -lX11 -lm -lz -lXau -lxcb -lXdmcp -lexpat

QMAKE_LIBS_OPENGL       = -lEGL -lGLESv2 -lIMGegl -lsrv_um
QMAKE_LIBS_OPENGL_QT    = -lEGL -lGLESv2 -lIMGegl -lsrv_um

QT_CFLAGS_GSTREAMER     += -pthread -Igstreamer-0.10 -Iglib-2.0 -Iglib-2.0/include

load(qt_config)
