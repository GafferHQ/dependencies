<?xml version="1.0" encoding="UTF-8"?>
<TestCase name="tst_Cmptest">
<Environment>
    <QtVersion>@INSERT_QT_VERSION_HERE@</QtVersion>
    <QtBuild/>
    <QTestVersion>@INSERT_QT_VERSION_HERE@</QTestVersion>
</Environment>
<TestFunction name="initTestCase">
<Incident type="pass" file="" line="0" />
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compare_unregistered_enums">
<Incident type="fail" file="tst_cmptest.cpp" line="154">
    <Description><![CDATA[Compared values are not the same]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compare_registered_enums">
<Incident type="fail" file="tst_cmptest.cpp" line="160">
    <Description><![CDATA[Compared values are not the same
   Actual   (Qt::Monday): Monday
   Expected (Qt::Sunday): Sunday]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compare_boolfuncs">
<Incident type="pass" file="" line="0" />
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compare_pointerfuncs">
<Incident type="pass" file="" line="0" />
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compare_tostring">
<Incident type="fail" file="tst_cmptest.cpp" line="231">
    <DataTag><![CDATA[int, string]]></DataTag>
    <Description><![CDATA[Compared values are not the same
   Actual   (actual)  : QVariant(int,123)
   Expected (expected): QVariant(QString,hi)]]></Description>
</Incident>
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[both invalid]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="231">
    <DataTag><![CDATA[null hash, invalid]]></DataTag>
    <Description><![CDATA[Compared values are not the same
   Actual   (actual)  : QVariant(QVariantHash)
   Expected (expected): QVariant()]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="231">
    <DataTag><![CDATA[string, null user type]]></DataTag>
    <Description><![CDATA[Compared values are not the same
   Actual   (actual)  : QVariant(QString,A simple string)
   Expected (expected): QVariant(PhonyClass)]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="231">
    <DataTag><![CDATA[both non-null user type]]></DataTag>
    <Description><![CDATA[Compared values are not the same
   Actual   (actual)  : QVariant(PhonyClass,<value not representable as string>)
   Expected (expected): QVariant(PhonyClass,<value not representable as string>)]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compareQStringLists">
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[empty lists]]></DataTag>
</Incident>
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[equal lists]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="325">
    <DataTag><![CDATA[last item different]]></DataTag>
    <Description><![CDATA[Compared lists differ at index 2.
   Actual   (opA): "string3"
   Expected (opB): "DIFFERS"]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="325">
    <DataTag><![CDATA[second-last item different]]></DataTag>
    <Description><![CDATA[Compared lists differ at index 2.
   Actual   (opA): "string3"
   Expected (opB): "DIFFERS"]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="325">
    <DataTag><![CDATA[prefix]]></DataTag>
    <Description><![CDATA[Compared lists have different sizes.
   Actual   (opA) size: 2
   Expected (opB) size: 1]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="325">
    <DataTag><![CDATA[short list second]]></DataTag>
    <Description><![CDATA[Compared lists have different sizes.
   Actual   (opA) size: 12
   Expected (opB) size: 1]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="325">
    <DataTag><![CDATA[short list first]]></DataTag>
    <Description><![CDATA[Compared lists have different sizes.
   Actual   (opA) size: 1
   Expected (opB) size: 12]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compareQListInt">
<Incident type="fail" file="tst_cmptest.cpp" line="332">
    <Description><![CDATA[Compared lists differ at index 2.
   Actual   (int1): 3
   Expected (int2): 4]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compareQListDouble">
<Incident type="fail" file="tst_cmptest.cpp" line="339">
    <Description><![CDATA[Compared lists differ at index 0.
   Actual   (double1): 1.5
   Expected (double2): 1]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compareQPixmaps">
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[both null]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="365">
    <DataTag><![CDATA[one null]]></DataTag>
    <Description><![CDATA[Compared QPixmaps differ.
   Actual   (opA).isNull(): 1
   Expected (opB).isNull(): 0]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="365">
    <DataTag><![CDATA[other null]]></DataTag>
    <Description><![CDATA[Compared QPixmaps differ.
   Actual   (opA).isNull(): 0
   Expected (opB).isNull(): 1]]></Description>
</Incident>
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[equal]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="365">
    <DataTag><![CDATA[different size]]></DataTag>
    <Description><![CDATA[Compared QPixmaps differ in size.
   Actual   (opA): 11x20
   Expected (opB): 20x20]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="365">
    <DataTag><![CDATA[different pixels]]></DataTag>
    <Description><![CDATA[Compared values are not the same]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="compareQImages">
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[both null]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="392">
    <DataTag><![CDATA[one null]]></DataTag>
    <Description><![CDATA[Compared QImages differ.
   Actual   (opA).isNull(): 1
   Expected (opB).isNull(): 0]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="392">
    <DataTag><![CDATA[other null]]></DataTag>
    <Description><![CDATA[Compared QImages differ.
   Actual   (opA).isNull(): 0
   Expected (opB).isNull(): 1]]></Description>
</Incident>
<Incident type="pass" file="" line="0">
    <DataTag><![CDATA[equal]]></DataTag>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="392">
    <DataTag><![CDATA[different size]]></DataTag>
    <Description><![CDATA[Compared QImages differ in size.
   Actual   (opA): 11x20
   Expected (opB): 20x20]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="392">
    <DataTag><![CDATA[different format]]></DataTag>
    <Description><![CDATA[Compared QImages differ in format.
   Actual   (opA): 6
   Expected (opB): 3]]></Description>
</Incident>
<Incident type="fail" file="tst_cmptest.cpp" line="392">
    <DataTag><![CDATA[different pixels]]></DataTag>
    <Description><![CDATA[Compared values are not the same]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="verify">
<Incident type="fail" file="tst_cmptest.cpp" line="404">
    <Description><![CDATA['opaqueFunc() < 2' returned FALSE. ()]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="verify2">
<Incident type="fail" file="tst_cmptest.cpp" line="410">
    <Description><![CDATA['opaqueFunc() < 2' returned FALSE. (42)]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="tryVerify">
<Incident type="fail" file="tst_cmptest.cpp" line="416">
    <Description><![CDATA['opaqueFunc() < 2' returned FALSE. ()]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="tryVerify2">
<Incident type="fail" file="tst_cmptest.cpp" line="422">
    <Description><![CDATA['opaqueFunc() < 2' returned FALSE. (42)]]></Description>
</Incident>
    <Duration msecs="0"/>
</TestFunction>
<TestFunction name="cleanupTestCase">
<Incident type="pass" file="" line="0" />
    <Duration msecs="0"/>
</TestFunction>
<Duration msecs="0"/>
</TestCase>
