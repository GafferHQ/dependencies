// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module devtools_service;

// The DevTools service exposes two interfaces:
// - DevToolsCoordinator: Privileged interface used by the shell to setup the
//   service and perform other control operations. Other applications are not
//   able to request this interface.
// - DevToolsRegistry: Interface that DevTools agents (e.g., Web page renderers)
//   use to register themselves.
//
// DevTools agents need to implement the DevToolsAgent interface and register
// themselves in order to receive DevTools commands from the DevTools service.

interface DevToolsCoordinator {
  // Initializes the DevTools service. An HTTP server will be run on the
  // specified port and speak the Chrome remote debugging protocol.
  Initialize(uint16 remote_debugging_port);
};

interface DevToolsRegistry {
  // Registers a DevTools agent.
  RegisterAgent(DevToolsAgent agent);
};

interface DevToolsAgent {
  // Sets/resets a client to receive event notifications and responses for
  // DispatchProtocolMessage() calls. If a client doesn't want to receive
  // messages anymore, it could simply close the underlying message pipe of
  // |client|.
  SetClient(DevToolsAgentClient client, string client_id);

  // Sends a command (in remote debugging protocol JSON format) to the agent.
  DispatchProtocolMessage(string message);
};

interface DevToolsAgentClient {
  // Sends a notification or response message (in remote debugging protocol JSON
  // format) to the client.
  DispatchProtocolMessage(string message);
};
