{%- import "struct_macros.tmpl" as struct_macros %}
size_t GetSerializedSize_(const {{struct.name}}Ptr& input) {
  if (!input)
    return 0;
  {{struct_macros.get_serialized_size(struct, "input->%s")}}
  return size;
}

void Serialize_({{struct.name}}Ptr input, mojo::internal::Buffer* buf,
                internal::{{struct.name}}_Data** output) {
  if (input) {
    {{struct_macros.serialize(struct, struct.name ~ " struct", "input->%s", "result", "buf")|indent(2)}}
    *output = result;
  } else {
    *output = nullptr;
  }
}

void Deserialize_(internal::{{struct.name}}_Data* input,
                  {{struct.name}}Ptr* output) {
  if (input) {
    {{struct.name}}Ptr result({{struct.name}}::New());
    {{struct_macros.deserialize(struct, "input", "result->%s")|indent(2)}}
    *output = result.Pass();
  } else {
    output->reset();
  }
}
