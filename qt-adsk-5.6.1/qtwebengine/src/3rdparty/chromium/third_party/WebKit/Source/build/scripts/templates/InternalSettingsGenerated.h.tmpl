{% from "macros.tmpl" import license %}
{{ license() }}

#ifndef InternalSettingsGenerated_h
#define InternalSettingsGenerated_h

#include "bindings/core/v8/ScriptWrappable.h"
#include "platform/RefCountedSupplement.h"
#include "platform/heap/Handle.h"
#include "wtf/PassRefPtr.h"
#include "wtf/RefCounted.h"
#include "wtf/text/WTFString.h"

namespace blink {

class Page;

class InternalSettingsGenerated : public RefCountedWillBeGarbageCollectedFinalized<InternalSettingsGenerated>, public ScriptWrappable {
    DEFINE_WRAPPERTYPEINFO();
public:
    explicit InternalSettingsGenerated(Page*);
    virtual ~InternalSettingsGenerated();
    void resetToConsistentState();
    {% for setting in settings if setting.type|to_idl_type %}
    void set{{setting.name|upper_first}}({{setting.type|to_passing_type}} {{setting.name}});
    {% endfor %}

    DEFINE_INLINE_VIRTUAL_TRACE() { }

private:
    Page* m_page;

    {% for setting in settings if setting.type|to_idl_type %}
    {{setting.type}} m_{{setting.name}};
    {% endfor %}
};

} // namespace blink

#endif // InternalSettingsGenerated_h
