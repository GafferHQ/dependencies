/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL3$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPLv3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or later as published by the Free
** Software Foundation and appearing in the file LICENSE.GPL included in
** the packaging of this file. Please review the following information to
** ensure the GNU General Public License version 2.0 requirements will be
** met: http://www.gnu.org/licenses/gpl-2.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quickitemtexture
    \since QtCanvas3D 1.0
    \title Qt Quick Item as Texture Example
    \ingroup qtcanvas3d-examples
    \brief A simple cube with a Qt Quick item as a texture

    The Qt Quick Item as Texture example shows how to use other Qt Quick items as
    a texture source for Qt Canvas3D textures.

    \image quickitemtexture-example.png

    \section1 Using Qt Quick Item as a Texture

    First we create a \l Rectangle with a label that displays the current frame rate and rotation
    values of the cube:

    \snippet quickitemtexture/qml/quickitemtexture/main.qml 0

    We want to use the above \l Rectangle as the texture on our 3D cube. As a \l Rectangle item
    doesn't implement QQuickItem::textureProvider() by itself, we make it layered by setting the
    \c{layer.enabled} property to \c{true}.

    To create a Canvas3DTexture out of our layered \l{Rectangle}, we create a
    \l{Canvas3DTextureProvider}{QTCANVAS3D_texture_provider} extension and the texture
    in the \c initializeGL() function in our JavaScript implementation:

    \snippet quickitemtexture/qml/quickitemtexture/quickitemtexture.js 0

    Once the \c cubeTexture item is created, it can be used like any other texture item in
    the JavaScript.

    \note The method of creating the texture from a Qt Quick item differs from how one would create
    texture from an HTML item in WebGL API. Textures created with
    \l{Canvas3DTextureProvider}{QTCANVAS3D_texture_provider} extension
    support automatic live updates, without having to call textureImage2D each frame
    to re-upload fresh texture data from the item.
*/
