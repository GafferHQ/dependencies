/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlmodule QtPositioning 5.2
    \title Qt Positioning QML Types
    \ingroup qmlmodules
    \brief Provides QML types for position information

\section1 Overview

The identifying string for this module is \e QtPositioning. To use include the following import
statement in the QML file.

\snippet doc_src_qtpositioning.qml import

\section2 Positioning QML Concepts

Position information can come from a variety of sources including satellites,
wifi, text files and so on. The position is described by the latitude,
the longitude, and the altitude in meters. For more information see
\l {http://en.wikipedia.org/wiki/Geographic_coordinate}{Geographic Coordinate}.

The QML position is stored in a \l {coordinate} which contains the
latitude, longitude and altitude of the device.  The \l {QtPositioning::Location}{Location} contains
this \l {coordinate} and adds an address, it also has a bounding box which
defines the recommended viewing region when displaying the location.

Now that the device has a position, with regular updates the API can determine
the speed and heading of the device. It can also define a box or a circle that can
produce a notification when the device either leaves or enters that region.

More detailed information retrieving the current position can be found under
\l {Positioning (QML)}{Location Positioning via QML}

\section1 Basic Types

\annotatedlist qml-QtPositioning5-basictypes

\section1 Alphabetical Listing of All QML Types
*/
