/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page build-sources.html
\title Building Qt Sources
\brief Building Qt from the source packages

There are two ways to install Qt:
\list 1
\li through the \e {Qt Installers} - downloads and installs Qt
\li through the \e{Qt sources}.
\endlist

You can download the Qt 5 installers and sources from the \l Downloads page.
For more information, visit the \l{Getting Started with Qt} page.

This page lists the relevant information for installing Qt by building the Qt
sources. The installation procedure is different on each Qt platform. This page
collects the relevant information for the \l{Community Supported Platforms}
{supported platforms}.

\section1 General Installation Information

Building Qt revolves around using \c configure to configure Qt for a particular
platform with a particular set of Qt features or modules. For more information,
visit the following page:

\list
\li \l{Qt Configure Options}
\endlist

\section1 Windows

\list
\li \l{Qt for Windows - Requirements}
\li \l{Qt for Windows - Building from Source}
\endlist

\section1 OS X

\list
\li \l{Qt for OS X - Requirements}
\li \l{Qt for OS X - Building from Source}
\endlist

\section1 Linux/X11

\list
\li \l{Qt for X11 Requirements}
\li \l{Qt for Linux/X11 - Building from Source}
\endlist

\section1 Embedded Linux

\list
\li \l{Qt for Embedded Linux#Configuring a Specific Device}
    {Qt for Embedded Linux - Building from Source}
\endlist

\section1 Android

\list
\li \l {Building Qt 5 for Android}{Qt for Android - Building from Source}
\endlist

\section1 iOS

\list
\li \l {Qt for iOS - Building from Source}
\endlist

\section1 WinRT

\list
\li \l {Qt for WinRT#Building from source}{Qt for WinRT - Building from Source}
\endlist

\section1 Windows CE

\list
\li \l{Qt for Windows CE Requirements}
\li \l{Installing Qt for Windows CE}
\endlist

\target openssl-v1later
\section1 OpenSSL (Version 1.0.0 or Later)

Support for \l{SSL}{Secure Sockets Layer (SSL)} communication is provided by the
\l{OpenSSL Toolkit}, which must be obtained separately.

From Qt version 5.2 onwards, the officially supported version for OpenSSL is 1.0.0
or later. Versions >= 0.9.7 and < 1.0.0 might work, but are not guaranteed to.

More information about enabling SSL support can be found in the
\l{Secure Sockets Layer (SSL) Classes} document.

*/

/*!
\page install-wince.html
\title Installing Qt for Windows CE
\ingroup qtce
\brief How to install Qt for Windows CE.
\tableofcontents

Qt for Windows CE has some requirements that are given in more detail
in the \l{Qt for Windows CE Requirements} document.

\section1 Step 1: Install the License File (Commercial Editions Only)
    Uncompress the files to the directory where you want to build;
    e.g., \c{C:\Qt\%VERSION%}.

    \note The install path must not contain any spaces.

\section1 Step 2: Set the Environment Variables

    In order to build and use Qt, the \c PATH environment variable needs
    to be extended:

    Make sure the environment variables for your compiler are set.
    Or simply use the "\gui{Visual Studio Command Prompt}" from the Start menu.

\section1 Step 3: Configure Qt

    To configure Qt, for a custom SDK, type the
    following:

\snippet snippets/code/doc_src_installation.qdoc 19

    If you want to configure Qt for another platform or with other
    options, type \c{configure -help} to get a list of all available
    options. See the \c README file for the list of supported
    platforms.

    \note The \c configure option -qtlibinfix cannot take a version number as an argument.
    For example:
    \c{-qtlibinfix 5.6.0} should be specified as \c{-qtlibinfix QtCore5.6.0.dll}.

\section1 Step 4: Build Qt Library

    To build Qt type:

    \snippet snippets/code/doc_src_installation.qdoc 22

\b{That's all. Qt is now installed.}

\section1 Qt Examples

    To get started with Qt, you can check out the examples found in the
    \c{examples} directory of your Qt installation. The documentation can
    be found in \c{doc\html}.

    \note If you reconfigure Qt for a different platform,
    make sure you start with a new clean console to get rid of the
    platform dependent include directories.

    The links below provide further information for using Qt:
    \list
    \li \l{Qt Examples and Tutorials}
    \li \l{Deploying Qt Applications}
    \endlist

    You might also want to try the following Windows CE specific links:
    \list
    \li \l{Windows CE - Introduction to using Qt}
    \li \l{Windows CE - Working with Custom SDKs}
    \li \l{Windows CE - Using shadow builds}
    \li \l{Windows CE - Signing}
    \endlist

    We hope you will enjoy using Qt. Good luck!
*/

/*!
    \page requirements-wince.html
    \title Qt for Windows CE Requirements
    \brief Setting up the Windows CE environment for Qt.

    Qt is known to work with Visual Studio 2005/2008 and SDKs for
    Windows CE 6/7 development on Windows XP and newer:

    Device manufacturers may prefer to make their own customized version of
    Windows CE using Platform Builder. In order for Qt for Windows CE to
    support a custom SDK, a build specification needs to be created. More
    information on Windows CE Customization can be found
    \l{Windows CE - Working with Custom SDKs}{here}.

    \section3 Requirements
    \list
        \li Development environment:
        \list
            \li Microsoft Visual Studio 2005 (Standard Edition) or higher
            \li ActivePerl
        \endlist
        \li Operating Systems
        \list
            \li Windows Embedded Compact  6 and 7
        \endlist
        \li Hardware Platform
        \list
            \li Supported on ARM, x86
            \li (Compiles on SH4 and MIPS)
        \endlist
    \endlist

        \sa {Known Issues}
*/
